<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[记Coding+CDN国内加速Pages]]></title>
    <url>%2F2018%2F1024%2F%E8%AE%B0Coding-CDN%E5%9B%BD%E5%86%85%E5%8A%A0%E9%80%9FPages.html</url>
    <content type="text"><![CDATA[之前虽然写过一篇文章分享如何通过coding与github双服务器托管hexo，但自己也只是把文章同时push到coding与github上，然后再通过CDN直接给github pages在国内加速，并没有启用coding的pages服务。反正想到都push上去了，于是打算启用一下，此文予以记录。 启用coding pages服务因为之前已经将本地仓库关联到coding仓库，所以此处不赘述，可看文末相关文章Coding+Github双服务器托管hexo一文。 当本地仓库关联到coding仓库之后，进入项目里，点击左侧的代码，再点击pages服务。创建静态coding pages之后点击小齿轮进入设置页面。 绑定域名之前先在域名DNS设置中添加一条CNAME记录指向xxxxx.coding.me。 解析添加完成之后即可绑定新域名，如果证书申请失败请查看错误信息，详情点击这里。 一般来说错误类型会是urn:acme:error:unauthorized，这是因为之前可能添加了域名的DNS解析到海外，比如github pages，所以此时要先关闭此条解析，申请证书之后再开启此解析。 以上完成后，如果打开xxxxx.coding.me会跳转到自己绑定的域名，则表示coding pages启用成功，国内走coding国外走github。 但现在并没有结束，在国内对自己的域名进行测速发现速度不够快，那么就要利用到CDN来给coding pages进行加速，个人使用的是腾讯CDN。 使用CDN为coding pages加速首先，ping一下xxxxx.coding.me，获得IP地址，再到腾讯云CDN里开启CDN服务，源站设置为该IP。然后再配置缓存，启用https，配置完成后，系统会分配对应的CNAME。启用CDN的细节可看文末相关文章通过CDN直接给Github+Pages加速一文。 当得到对应的CNAME之后，去域名解析里添加解析。我的解析如下： 国内与国外设置不同CANME，国外指向xxxxx.github.io或者xxxxx.coding.me(任选其一即可)，国外我选的是github，所以暂停了coding解析，国内则指向刚才CDN给出的地址。 到此所有配置全部完成。 相关文章： Coding+Github双服务器托管hexo 通过CDN直接给GithubPages加速]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>hexo</tag>
        <tag>搭建</tag>
        <tag>coding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[遍地苦难尘]]></title>
    <url>%2F2018%2F1011%2F%E9%81%8D%E5%9C%B0%E8%8B%A6%E9%9A%BE%E5%B0%98.html</url>
    <content type="text"><![CDATA[Buddha与Puta可以很近但人与人却很远《大佛普拉斯》 诺贝尔摄影奖 海景别墅 “男人骑什么粉红色的摩托车，难怪交不到女朋友” “你是在靠北什么哦，这电影是黑白的，你不说别人是看得出来吗” 梦露，大佛 他希望菜埔他们送到这里就好，接下来，他想要一个人慢慢走。 我想虽然现在是太空时代，人类早就可以坐太空船去月球，但永远无法探索别人内心的宇宙。]]></content>
      <categories>
        <category>生活拾空</category>
      </categories>
      <tags>
        <tag>life</tag>
        <tag>music</tag>
        <tag>film</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谨慎的收藏家]]></title>
    <url>%2F2018%2F1007%2F%E8%B0%A8%E6%85%8E%E7%9A%84%E6%94%B6%E8%97%8F%E5%AE%B6.html</url>
    <content type="text"><![CDATA[“他就站在那儿，不言不语，只是微笑。那笑容似有魔力一般，让人沉醉其中无法自拔。我知道，这次我的钱包在劫难逃。” — —《Genesis · Chapter Ⅰ · Gabe Newell》 用steam已经有4年多了吧，游戏数终于也在今天到达10k了。记得是14年3月1日入的坑，在steam上买的第一个游戏是l4d2，那时国区还是并在美区当中的，包也少，买游戏还是挺费劲的，后来15年10月出了国区（如果没记错的话），这时便A了一年没再买过游戏，16年冬季特惠的时候又入了买买买的坑，感觉到现在也可以放缓脚步了。 去年的时候入了收集绝版游戏和区域独占游戏的坑，感觉比+1还累，到处找老外收key收gift，各区域的小号也是创建了个遍，不过认识了一些志同道合的朋友还是挺开心的。另外比起收集绝版最难的还是收集被ban的app，不能+1就算了，而且下架还毫无征兆，没有key的话就再也收集不到了。现在也没有太多的精力了，只能随缘了。 之后又开始沉迷于库存物品+1，感觉游戏+1已经不能满足自己了，果然steam本身就是一个收集养成类的游戏。/捂脸 有兴趣的朋友可以看看我写的指南，链接在下方。不过入坑要谨慎，因为有的游戏物品一旦添加到库存里之后则无法删除了，到时后悔的话就没有办法了。 库存物品喜+1指南!!强迫症的末日——蒸汽动力 再记录下此时的数据吧。]]></content>
      <categories>
        <category>生活拾空</category>
      </categories>
      <tags>
        <tag>life</tag>
        <tag>steam</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[路边野餐]]></title>
    <url>%2F2018%2F0924%2F%E8%B7%AF%E8%BE%B9%E9%87%8E%E9%A4%90.html</url>
    <content type="text"><![CDATA[作者：毕赣 壹 背着手在亚热带的酒馆门前吹风晚了就坐下看柔和的闪电 背着城市亚热带季风的河岸淹没还不醉的桥不醉的建筑用静默解酒 明天 阴摄氏三到十二度修雨刷片 带伞在戒酒的意识里徒然下车走路到天晴 照旧打开身体的衣柜水分子穿越纤维 贰 没有了音乐就退化耳朵没有了戒律就灭掉烛火像回到 误解照相术的年代你摄取我的灵魂没有了剃刀就封锁语言没有了心脏却活了九年 叁 山是山的影子狗懒得进化夏天人的酶很固执灵魂的酶像荷花 肆 许多夜晚重叠悄然形成黑暗玫瑰吸收光芒大地按捺清香为了寻找你我搬进鸟的眼睛经常盯着路过的风 伍 命运布光的手为我支起了四十二架风车源源不断的自然宇宙来自于平衡附近的星球来自于回声沼泽来自于地面的失眠褶皱来自于海冰来自于酒通往岁月楼层的应急灯通往我写诗的石缝 一定有人离开了会回来腾空的竹篮装满爱一定有某种破碎像泥土某个谷底像手一样摊开 陆 今天的太阳像瘫痪的卡车沉重地运走 整个下午白醋 春梦 野柚子把回忆揣进手掌的血管里手电的光透过掌背仿佛看见跌入云端的海豚 柒 所有的转折隐藏在密集的鸟群中天空与海洋都无法察觉怀着美梦却可以看见摸索颠倒的一瞬间 所有的怀念隐藏在相似的日子里心里的蜘蛛模仿人类张灯结彩携带乐器的游民也无法表达这对望的方式接近古人接近星空 捌 冬天是十一月 十二月一月 二月 三月 四月当我的光曝在你身上重逢就是一间暗室]]></content>
      <categories>
        <category>生活拾空</category>
      </categories>
      <tags>
        <tag>life</tag>
        <tag>film</tag>
        <tag>poetry</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ss配合各插件使用]]></title>
    <url>%2F2018%2F0918%2Fss%E9%85%8D%E5%90%88%E5%90%84%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8.html</url>
    <content type="text"><![CDATA[当你成功在vps上搭建了ss之后，可以利用一些软件去更好地使用ss。以下会分享如何利用这些软件去实现pc全局代理软件和游戏、手机端代理和浏览器智能代理。 Proxifier+ss实现全局代理(代理软件) 前言由于ss使用的是sockets5代理，一般情况下只有一些浏览器可以支持并实现魔法上网（笨笨的IE当然是不支持的）。但很多用户希望自己的应用软件或一些游戏也能实现魔法上网和加速，这里就需要使用proxifier这个软件。 下载该软件是收费的，注册码的话可以去网上自行查找。 proxifier官网下载 个人使用的是绿色汉化版，无须注册码，解压安装即用。 百度云盘 提取码：ed93 配置安装完成后打开软件，首先配置代理服务器。 如下图，添加地址127.0.0.1，以及ss里配置的本地端口，默认为1080，之后选择socks version 5。 配置好后，点击测试，如果显示下图的绿色文字，则表示配置正确。英文版本显示为：Proxy is ready to work with Proxifier! 接着就要添加规则，来确定哪些程序是走代理的，哪些不走代理。点击代理规则。 接着会看到图中有个default规则，如果default旁边的动作栏里边选择的是proxy socks5 127.0.0.1，则本机所有软件都会走代理。但我们不需要所有软件都走代理，所以要把default的动作栏里的选项改成Direct。如下图： 如果你希望所有程序都走代理，那么调回proxy socks5 127.0.0.1即可。 当取消所有软件都走代理之后，开始添加自己想要走代理的软件。例如我想让qq走代理,那么在刚才的代理规则页面点击添加，名称自定义，接着点击浏览选择程序的位置，目标主机默认为任意，端口默认为任意，动作选择proxy socks5 127.0.0.1，最后点击确定。 当上述操作完成后新的规则就添加上去了，再点击确定即可。 Sockscap64+ss实现全局代理(代理游戏) 前言为什么不用proxifier代理游戏呢？因为在游戏的时候需要UDP转发，而proxifier并不支持UDP协议，用proxifier来代理游戏并不理想，所以更适合用sockscap64来代理游戏，当然也可以用来代理软件。理论上下载一个sockscap64就够用了，只是我很喜欢proxifier的default规则，可以让pc上所有程序都走代理。 下载sockscap64官网下载 软件免费，支持简体中文，虽因不可抗力停止更新但目前仍可使用。 配置安装完成后打开软件，点击主面板的代理，再弹出的窗口点击+号添加本地代理，IP填127.0.0.1，端口默认1080，类型socks5，然后保存。 接着添加想要代理的程序或游戏，例如我想添加csgo走代理让我玩国际服的时候延迟更低，则在主面板点击程序旁边的小箭头，然后点击添加一个EXE文件。选择完程序路径后在启动项那里加上-steam -udp然后确定。 接着点击刚刚添加的程序，再点击主面板的运行即可。我用的是香港的节点，可以看到左下角我的ip，证明已经成功被代理。 破影而出、小火箭等app+ss实现手机端代理 前言因为敏感词原因，以下涉及的软件名皆用中文代替，且个人用的是ios系统，所以以下示例皆为ios，安卓同理就不赘述了。 有时光pc端魔法上网并不能满足很多人的需求，手机上的很多软件依旧是需要魔法上网才能使用的，本来app store上以前还是有很多支持ss或者ssr的软件，但是由于最近的严肃整改，基本上快绝迹了，剩下的都是些挂皮广告软件。 下载目前pp上还有小火箭的客户端，使用方法跟下面一样。 个人目前使用的是破影而出，此软件收费，国区3块钱，建议别用国区账号购买，国区商店随时可能下架这类软件。自己用的是美区的app账号购买的，商店里搜索shadow关键词即可找到。当然还有其他的这类软件，操作方法基本一样。 配置首先打开电脑上的ss客户端，右键小飞机选择服务器里的分享服务器配置，接着会弹出一个二维码。 在手机上下载安装完软件之后，打开并点击左上角的扫描二维码，扫描这个二维码之后你的ss信息就会录入进去，再点连接就搞定了。可以向左滑动录入的服务器进行编辑，代理模式可以选择全局和自动。（如果pc端使用是ssr，且手机里使用的软件也支持ssr，则在手机软件里的用户类型要选择ssr而不是ss） 其他手机上类似的软件也是同样的方法，非常的简单快捷。 Chrome+SwitchyOmega+ss实现浏览器智能代理 前言SwitchyOmega是一款Chrome浏览器上的一个代理扩展程序，可以轻松快捷地管理和切换多个代理设置。 那么既然ss可以直接让浏览器魔法上网，为什么还要多此一举用SwitchyOmega？简单地说就是ss有两种上网模式，PAC模式和全局模式，其中有很多网站在PAC模式下是无法打开的，必须要使用全局模式，但老是手动切换十分不便。这个chrome插件就实现了这个功能，当你遇到个别需要全局代理的网站时，可实现自动切换。 下载插件地址：1https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif 想要下载chrome扩展首先就需要魔法上网，所以推荐这个网站来下载扩展，网站内有下载说明。 下载完成之后在chrome浏览器里的地址栏里输入chrome://extensions/，把下好的.crx文件直接拖进去就完成安装了。 配置打开ss，代理模式选择为PAC模式。 打开chrome，点击右上角的SwitchyOmega图标，再点击选项即可进入配置页面。接着在配置页面点击新建情景模式，设置内容如下图（代理端口要和ss的端口一致，默认为1080）： 完成后点SwitchyOmega图标，选择auto switch即为自动模式，选择ss则为全局模式。当以auto switch模式运行时遇到需要全局代理的网站时，插件会以角标形式提示，点击SwitchyOmega图标，再点击x个资源未加载，选择自建的情景模式ss再点击添加条件即可。 一个网站只要添加过一次情景模式，那么下次打开时将会自动判断，切换到代理模式。 鉴于网络上很多网站都需要代理，那么每次都要手动点击一次，略嫌麻烦，于是就用到规则列表。规则列表就是gfwlist，也就是被墙记录了不予许登陆的网站名单。 gfwlist github地址 进入SwitchyOmega配置页面，再点击auto switch情景模式，将上面发布的地址替换到规则列表网址中，然后点击立即更新情景模式即可。 相关文章： VPS上搭建ss chrome魔法上网扩展]]></content>
      <categories>
        <category>GFW</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>gfw</tag>
        <tag>扩展</tag>
        <tag>plugin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VPS上搭建ss]]></title>
    <url>%2F2018%2F0916%2FVPS%E4%B8%8A%E6%90%AD%E5%BB%BAss.html</url>
    <content type="text"><![CDATA[之前写了魔法上网的chrome扩展一文，但是个人更推荐自己搭建，本来我的小鸡已经够多了，但前几天vultr给我其中一个邮箱送了10刀余额，于是想着正好可以顺手写一篇关于搭建的文章。此文便是分享如何在VPS上搭建ss进行魔法上网。 VPS是什么 Virtual private server，缩写为 VPS，即虚拟专用服务器，是将一台服务器分区成多个虚拟专享服务器的服务。在容器或虚拟机中，每个VPS都可分配独立公网IP地址、独立操作系统、实现不同VPS间磁盘空间、内存、CPU资源、进程和系统配置的隔离，为用户和应用程序模拟出“独占”使用计算资源的体验。—摘自wiki VPS与Vhost，ECS，独立服务器的区别 可参考云栖社区的《阿里云服务器与VPS和虚拟主机有什么区别？》一文。 VPS供应商 国外的VPS供应商有很多，像比较有名的有搬瓦工和Vultr，所以这两个也是被GFW重点关注的对象，谁让这两个价格优惠且返利活动多呢。以后有机会我会专门写一篇文章对比国外的VPS供应商的优劣。 正式搭建 注册vultr新用户注册，送25美元，有效期一年，一年没有用完自动过期，且需要自己再充值5美元来激活这个送的25美元。算一下的话就是2.5刀一个月的魔法主机可以用一年，3.5刀一个月的魔法主机可以用八个月，5刀一个月的魔法主机可以用六个月。 注意：要参加这个活动只能使用信用卡或者paypal来充值5美元激活，支付宝付款不能激活赠送的25美元。 新用户活动注册地址：https://www.vultr.com/promo25b 创建server点击左侧的servers，进入创建服务器页面。 服务器节点推荐洛杉矶和纽约。另外vultr是被重点关注对象，所以如果选择的节点被墙则可以删除这个服务器，再按教程重新创建一个服务器，因为vultr是按时间计费的，所以不用担心扣费。 操作系统根据自己习惯选择，个人使用的是CenterOS。 价格最便宜的配置为2.5刀/月，但此配置只有IPV6权限，3.5刀/月和2.5刀/月的基础配置一样，同是1vCore的cpu、512M内存、20G的ssd与1Gbps带宽，但多了IPV4权限，想要IPV4地址则要选择最近新增的3.5刀/月或往上的配置。了解详情可点这里。个人选的3.5刀/月的配置。 以上选择完毕后拉到最下面点击Deploy Now生成服务器。现在Servers界面会显示刚创建的服务器，状态是Installing.，等一会儿状态会变成Running。 连接server点击刚才创建的服务器，进入详情页面： 页面显示该VPS的IP、Username、Password；右上角有”View Console”按钮，点击后可以打开控制台登录VPS，但个人更推荐用Putty来连接server。 Putty是一个免费SSH客户端，SSH是一种安全协议，常用于连接服务器。下载页面 下载完成后打开Putty，在Session页面填写创建的服务器IP地址和Port，默认为22。 然后到Connection--Data填写登录用户名为root。 填写完后，返回到Session保存一下。 点击Open连接VPS，连接成功后，会提示输入Password，因为vultr给的密码很复杂，所以在输入密码的时候，直接在server页面复制密码，然后在dos窗口内右键回车即可。密码不会显示出来，但是已经输入进去了。输入密码后，如果出现[root@vultr ~]#表示成功登录。 另外SSH连接有超时时间，默认大概1分钟。如果长期没操作，putty客户端没反应，只要重新用putty连接即可。 server上安装ss脚本此处推荐看ss 一键安装脚本（四合一）的安装教程。 运行以下命令: 123wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.shchmod +x shadowsocks-all.sh./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log 选择脚本Python、R、Go、libev： 123456Which Shadowsocks server you'd select:1.Shadowsocks-Python2.ShadowsocksR3.Shadowsocks-Go4.Shadowsocks-libevPlease enter a number (default 1): 个人选择的是Shadowsocks-Go，输入3，然后输入密码和端口，使用的是默认密码即直接回车，为teddysun.com，端口设置的为8989，加密模式为aes-256-cfb: 123456默认配置：密码：自己设定（如不设定，默认为 teddysun.com）服务器端口：自己设定（如不设定，默认从 9000-19999 之间随机生成）加密方式：自己设定（如不设定，Python 和 libev 版默认为 aes-256-gcm，R 和 Go 版默认为 aes-256-cfb）协议（protocol）：自己设定（如不设定，默认为 origin）（仅限 ShadowsocksR 版）混淆（obfs）：自己设定（如不设定，默认为 plain）（仅限 ShadowsocksR 版） 安装成功后，命令行出现： 如果安装失败，请尝试其他脚本。 到这里，VPS上已经成功搭建上了ss。 ss与ssr客户端 个人使用的是ss，ss windows客户端 mac用户可使用ShadowsocksX-NG，mac客户端 若是用的ssr，则下载ssr客户端，ssr windows客户端 下载安装之后打开，选择编辑服务器，添加刚刚设置的服务器ip、端口、密码，代理端口为代理本机的端口，建议默认 1080： 最后代理模式改为全局模式，现在可以去体验墙外的世界啦。 相关文章： ss配合各插件使用 chrome魔法上网扩展]]></content>
      <categories>
        <category>GFW</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>搭建</tag>
        <tag>gfw</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关爱空巢老人，别让等待，成为遗憾]]></title>
    <url>%2F2018%2F0912%2F%E5%85%B3%E7%88%B1%E7%A9%BA%E5%B7%A2%E8%80%81%E4%BA%BA%EF%BC%8C%E5%88%AB%E8%AE%A9%E7%AD%89%E5%BE%85%EF%BC%8C%E6%88%90%E4%B8%BA%E9%81%97%E6%86%BE.html</url>
    <content type="text"><![CDATA[因为自己对吃的真的很随意，所以倒不怎么关注美食这一块。如果给我几种不同口味的泡面我觉得可以连续吃上一个月/捂脸。不过想着以后要主家务还是要学会做饭的23333。 一年多之前看到了小哥的视频有些鸡注定要活在回忆里，觉得美食节目居然还能这么拍，看来不想当演员的美食家不是好up主，默片风格也是独树一帜了。尤其在有了专业团队之后在运镜剪辑这方面做得更出色了。虽然没有详细的美食技巧，但是却非常的吸引我，或许是因为小哥有故事吧。]]></content>
      <categories>
        <category>生活拾空</category>
      </categories>
      <tags>
        <tag>video</tag>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[轻羽飞扬！]]></title>
    <url>%2F2018%2F0903%2F%E8%BD%BB%E7%BE%BD%E9%A3%9E%E6%89%AC%EF%BC%81.html</url>
    <content type="text"><![CDATA[很棒的op，无论是升格的运用还是颜色和字体的设计都很不错。 从第一次看到自闭飞扬的pv之后就被深深地吸引了。鞋底擦过地板、球拍划过空气与击球的音效实在是太棒了，简直让人身临其境。不过看到现在给我的感觉是高开低走了，前面几话都还挺好，尤其是看到小时候的绫乃简直被萌到不行。第三话的最后，从现在的场景转场到小时候的场景再与bgm衔接的处理也是赞到不行。 但是到了后面几话运动场景逐渐减少，比赛过程都是靠人物对白和一些类似镜头撑时间。到了刚刚看的第10话更是发现一些崩的很厉害的作画，有 YONEX 1 的赞助不至于经费不够吧，后面几话的一些运动镜头也是用的之前的，只不过换了人物而已。 剧情方面因为没看过漫画，所以不知道改编是否过多或者合理，可总感觉里面的一些人物情感尤其是配角给我很莫名的感觉，可能还是因为集数限制导致前面的铺垫不够多。说实话我只是想看个很正式、传统的体育竞技番而已。/皱眉 虽然没有看过漫画，不过后面的剧情已经被B站弹幕剧透的差不多了。即使知道渚会把现在满口垃圾话的自闭大魔王绫乃摁在地上锤，可还是很期待最后决赛的作画。希望不会让人失望。 喵喵喵？ 更新：今天看了第十三话终于完结了。最后两话的作画虽然有些地方感觉在偷懒，但张力还是很好的，不过也就只剩作画了，剧情真是谜一般的存在。整部看下来，可以看出编剧想讲的东西有很多，但是13集的动画能挤出多少来进行铺垫，塞了很多线条进去但却没理清，转合都过于生硬突兀。做不到面面俱到就尽量别顾彼失此，明明只要刻画一两条线就足够了。 也就看看渚了，渚是真的帅啊。 1.尤尼克斯，奥运会级别的羽毛球运动产品品牌。 ↩]]></content>
      <categories>
        <category>生活拾空</category>
      </categories>
      <tags>
        <tag>video</tag>
        <tag>life</tag>
        <tag>ac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo上的aplayer应用]]></title>
    <url>%2F2018%2F0902%2Fhexo%E4%B8%8A%E7%9A%84aplayer%E5%BA%94%E7%94%A8.html</url>
    <content type="text"><![CDATA[小记aplayer是一个非常漂亮好用的HTML5音乐播放器，和dplayer师出同门，本篇主要分享一下自己搭建到hexo上的一些经验。部署dplayer的方式我是用的hexo插件，部署aplayer的方式我是用的提取dist文件。这样可以相互参考，喜欢哪种方式部署就用哪种。 下载aplayer访问aplayer源码：GitHub Aplayer，将文件下载到本地，解压后将dist文件夹复制到~/hexo/themes/next/source文件夹下。 创建样式新建music.js在~/hexo/themes/next/source/dist文件夹中新建music.js文件，将下面代码添加进去：12345678910111213141516171819202122const ap = new APlayer(&#123; container: document.getElementById('aplayer'), autoplay: false, loop: 'all', volume: 0.7, listFolded: true, listMaxHeight: 60, audio: [ &#123; name: 'name1', artist: 'artist1', url: 'url1.mp3', cover: 'cover1.jpg', &#125;, &#123; name: 'name2', artist: 'artist2', url: 'url2.mp3', cover: 'cover2.jpg', &#125; ]&#125;); 参数修改上面代码为你在hexo上生成aplayer播放器的样式，参数修改参考官方中文文档。 修改aplayer样式普通模式代码：123456789const ap = new APlayer(&#123; container: document.getElementById('aplayer'), audio: [&#123; name: 'name', artist: 'artist', url: 'url.mp3', cover: 'cover.jpg' &#125;]&#125;); 效果如下： 播放列表模式代码：123456789101112131415161718192021222324const ap = new APlayer(&#123; container: document.getElementById('player'), listFolded: false,//列表默认折叠 listMaxHeight: 90,//列表最大高度 lrcType: 3, //此为歌词格式，没有歌词可以直接删掉这一行 audio: [ &#123; name: 'name1', artist: 'artist1', url: 'url1.mp3', cover: 'cover1.jpg', lrc: 'lrc1.lrc', theme: '#ebd0c2' &#125;, &#123; name: 'name2', artist: 'artist2', url: 'url2.mp3', cover: 'cover2.jpg', lrc: 'lrc2.lrc', theme: '#46718b' &#125; ]&#125;); 效果如下： 吸底模式代码：12345678910const ap = new APlayer(&#123; container: document.getElementById('player'), fixed: true, audio: [&#123; name: 'name', artist: 'artist', url: 'url.mp3', cover: 'cover.jpg', &#125;]&#125;); 效果如下： 迷你模式代码：12345678910const ap = new APlayer(&#123; container: document.getElementById('player'), mini: true, audio: [&#123; name: 'name', artist: 'artist', url: 'url.mp3', cover: 'cover.jpg', &#125;]&#125;); 效果如下： 其他参数修改其他参数解释都能在官方文档里面查看，我再赘述一遍吧。 1234567891011121314151617181920212223242526272829303132const ap = new APlayer(&#123; container: document.getElementById('aplayer'), //播放器容器元素 mini: false, //迷你模式 autoplay: false, //自动播放 theme: '#FADFA3', //主题色 loop: 'all', //音频循环播放, 可选值: 'all'全部循环, 'one'单曲循环, 'none'不循环 order: 'random', //音频循环顺序, 可选值: 'list'列表循环, 'random'随机循环 preload: 'auto', //预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7, //默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 mutex: true, //互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器 listFolded: false, //列表默认折叠 listMaxHeight: 90, //列表最大高度 lrcType: 3, //歌词传递方式 audio: [ //音频信息,包含以下 &#123; name: 'name1', //音频名称 artist: 'artist1', //音频艺术家 url: 'url1.mp3', //音频外链 cover: 'cover1.jpg', //音频封面 lrc: 'lrc1.lrc', //音频歌词，配合上面的lrcType使用 theme: '#ebd0c2' //切换到此音频时的主题色，比上面的 theme 优先级高 &#125;, &#123; name: 'name2', //如果只有一首歌，删掉这一块，如有更多歌曲按此格式逐渐往下添加 artist: 'artist2', url: 'url2.mp3', cover: 'cover2.jpg', lrc: 'lrc2.lrc', theme: '#46718b' &#125; ]&#125;); 更多有趣的功能自己去发掘吧。 再在这里放一个音乐外链网站，搜索音乐，进去之后得到的url就是外链。或者参考我的另一篇文章。 部署上面操作完成后，aplayer的样式就已经设置好了。现在要做的就是把aplayer放在自己想要放置的位置上，放置代码如下：1234&lt;link rel="stylesheet" href="/dist/APlayer.min.css"&gt;&lt;div id="aplayer"&gt;&lt;/div&gt;&lt;script type="text/javascript" src="/dist/APlayer.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="/dist/music.js"&gt;&lt;/script&gt; 将放置代码放在不同的~/hexo/themes/next/layout/***.swig文件内会有不同的效果。 例1： 例2： 例3： 每个人使用的主题不一样，要根据自己的主题去调试。例如我用的是next-mist主题，且喜欢放置在侧边栏。那么在~/hexo/themes/next/layout/_marco文件夹下找到sidebar.swig文件。 如果要放置在侧边栏的友链下面,那么在sidebar.swig中找到if theme.links，将放置代码添加到endif之后。如下图： 如要放置到RSS下就在sidebar.swig中搜索if theme.rss，也是添加到endif之后。 想放在其他更多的位置上就自己去尝试吧。]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>github</tag>
        <tag>hexo</tag>
        <tag>搭建</tag>
        <tag>plugin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-next主题下的美化]]></title>
    <url>%2F2018%2F0901%2Fhexo-next%E4%B8%BB%E9%A2%98%E4%B8%8B%E7%9A%84%E7%BE%8E%E5%8C%96.html</url>
    <content type="text"><![CDATA[小记因为hexo可以自定义的东西太多了，感觉还是整合到一篇post里会比较好。慢慢更新ing。 next主题下让头像旋转 两种方法让hexo next主题中的头像显示成圆形，且鼠标放上去有旋转效果。 很推荐使用第一种方法，因为最好不要去修改除了/next/source/css/_custom/文件夹之外的其他4个文件夹里的源码。修改了其他四个文件夹里的源码之后想要还原的话则又要去修改一遍源码，比较麻烦。如果你只修改了_custom/custom.styl中的源码且想要还原的话，只需将custom.styl这个文件里面的添加的代码删除即可。 方法1：直接在~/hexo/themes/next/source/css/_custom文件夹下的costom.styl文件内添加以下代码：123456789101112// 侧栏头像圆形及旋转效果.site-author-image &#123; border: 0px solid rgb(255, 255, 255); border-radius: 100%; transition: transform 1.0s ease-out;&#125;img:hover &#123; transform: rotateZ(360deg);&#125;.posts-expand .post-body img:hover &#123; transform: initial;&#125; 方法2：直接编辑~/hexo/themes/next/source/css/_common/components/sidebar文件夹下的sidebar-author.styl文件即可： 将以下代码替换到其中的site-author-img属性。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused; */ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 可自行编辑其中自己想要的属性。 sidebar-author-img原代码备份：12345678.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color;&#125; next主题下让页脚的heart-icon跳动起来 使用NexT主题后，默认的页脚icon会变成user。可以去Font Awesome自行查找替换。 在next文件下的主题配置文件中，找到footer，把icon后面替换成你在Font Awesome上找到的图标的名字就ok了（不必带 fa- 前缀）。 那么如何让页脚的❤icon跳动起来呢？ 首先修改主题配置文件： 1文件位置：~/hexo/themes/next/_config.yml 12footer: icon: user修改成heart 然后修改footer.swig： 1文件位置：~/hexo/themes/next/layout/_partials/footer.swig 1&lt;span class="with-love"&gt;修改成&lt;span class="with-love" id="heart"&gt; 接着编辑custom.styl： 1文件位置：~/hexo/themes/next/source/css/_custom/custom.styl 在其中加入 12345678910111213// 自定义页脚跳动的心样式@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(0, 0, 0);&#125; 其中color的值可以改成你自己喜欢的，RGB颜色可以参考这里。 效果如下： hexo上修改代码块自定义样式 在next文件夹下的sidebar-author.styl文件中添加如下代码：1文件位置：~/hexo/themes/next/source/css/_custom/custom.styl 1234567891011121314151617// Custom styles.code &#123; color: #ff7600; //代码颜色 background: #fbf7f8; //背景颜色 margin: 2px; //左右间距 padding: 2px; //上下间距 border: 1px solid #D3D3D3; //边框线&#125;// 大代码块的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 可以只修改小代码块。颜色代码可以参考这里。 next主题下修改字体 此特性在版本 5.0.1中引入，要使用此功能请确保所使用的 NexT 版本在此之后。 在主题配置文件中找到font并启用，配置如下： 12345678910111213141516171819202122232425262728293031font: enable: true # 外链字体库地址，例如 //fonts.googleapis.com (默认值) host: # 全局字体，应用在 body 元素上 global: external: true family: Monda # 标题字体 (h1, h2, h3, h4, h5, h6) headings: external: true family: Roboto Slab # 文章字体 posts: external: true family: # Logo 字体 logo: external: true family: Lobster Two size: 24 # 代码字体，应用于 code 以及代码块 codes: external: true family: PT Mono 对应的family可在google fonts自行查找。 next主题下加入动态背景 我在用的最新版next主题版本自带5种动态背景。编辑主题配置文件， 搜索Canvas-nest、three_waves、canvas_lines、canvas_sphere、Canvas-ribbon即可，根据自己的需求设置值为true或者false。1注意： three_waves 在版本 5.1.1 中引入。只能同时开启一种背景动画效果。 如果你有自己的背景代码想放在hexo上，那就继续往下看吧。 先在~/hexo/themes/next/layout中找到_layout.swig文件。 在其&lt;body&gt;里添加：123&lt;div class="bg_content"&gt; &lt;canvas id="canvas"&gt;&lt;/canvas&gt;&lt;/div&gt; 仍是该文件，在末尾添加：1&lt;script type="text/javascript" src="/js/src/dynamic_bg.js"&gt;&lt;/script&gt; 接着在~/themes/next/source/js/src中新建文件dynamic_bg.js，将自己的背景代码添加进去，我用的动态背景代码如下，感谢作者的分享。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148var canvas = document.getElementById("canvas");var ctx = canvas.getContext("2d");var cw = canvas.width = window.innerWidth, cx = cw / 2;var ch = canvas.height = window.innerHeight, cy = ch / 2;ctx.fillStyle = "#000";var linesNum = 16;var linesRy = [];var requestId = null;function Line(flag) &#123; this.flag = flag; this.a = &#123;&#125;; this.b = &#123;&#125;; if (flag == "v") &#123; this.a.y = 0; this.b.y = ch; this.a.x = randomIntFromInterval(0, ch); this.b.x = randomIntFromInterval(0, ch); &#125; else if (flag == "h") &#123; this.a.x = 0; this.b.x = cw; this.a.y = randomIntFromInterval(0, cw); this.b.y = randomIntFromInterval(0, cw); &#125; this.va = randomIntFromInterval(25, 100) / 100; this.vb = randomIntFromInterval(25, 100) / 100; this.draw = function() &#123; ctx.strokeStyle = "#ccc"; ctx.beginPath(); ctx.moveTo(this.a.x, this.a.y); ctx.lineTo(this.b.x, this.b.y); ctx.stroke(); &#125; this.update = function() &#123; if (this.flag == "v") &#123; this.a.x += this.va; this.b.x += this.vb; &#125; else if (flag == "h") &#123; this.a.y += this.va; this.b.y += this.vb; &#125; this.edges(); &#125; this.edges = function() &#123; if (this.flag == "v") &#123; if (this.a.x &lt; 0 || this.a.x &gt; cw) &#123; this.va *= -1; &#125; if (this.b.x &lt; 0 || this.b.x &gt; cw) &#123; this.vb *= -1; &#125; &#125; else if (flag == "h") &#123; if (this.a.y &lt; 0 || this.a.y &gt; ch) &#123; this.va *= -1; &#125; if (this.b.y &lt; 0 || this.b.y &gt; ch) &#123; this.vb *= -1; &#125; &#125; &#125;&#125;for (var i = 0; i &lt; linesNum; i++) &#123; var flag = i % 2 == 0 ? "h" : "v"; var l = new Line(flag); linesRy.push(l);&#125;function Draw() &#123; requestId = window.requestAnimationFrame(Draw); ctx.clearRect(0, 0, cw, ch); for (var i = 0; i &lt; linesRy.length; i++) &#123; var l = linesRy[i]; l.draw(); l.update(); &#125; for (var i = 0; i &lt; linesRy.length; i++) &#123; var l = linesRy[i]; for (var j = i + 1; j &lt; linesRy.length; j++) &#123; var l1 = linesRy[j] Intersect2lines(l, l1); &#125; &#125;&#125;function Init() &#123; linesRy.length = 0; for (var i = 0; i &lt; linesNum; i++) &#123; var flag = i % 2 == 0 ? "h" : "v"; var l = new Line(flag); linesRy.push(l); &#125; if (requestId) &#123; window.cancelAnimationFrame(requestId); requestId = null; &#125; cw = canvas.width = window.innerWidth, cx = cw / 2; ch = canvas.height = window.innerHeight, cy = ch / 2; Draw();&#125;;setTimeout(function() &#123; Init(); addEventListener('resize', Init, false);&#125;, 15);function Intersect2lines(l1, l2) &#123; var p1 = l1.a, p2 = l1.b, p3 = l2.a, p4 = l2.b; var denominator = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y); var ua = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denominator; var ub = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denominator; var x = p1.x + ua * (p2.x - p1.x); var y = p1.y + ua * (p2.y - p1.y); if (ua &gt; 0 &amp;&amp; ub &gt; 0) &#123; markPoint(&#123; x: x, y: y &#125;) &#125;&#125;function markPoint(p) &#123; ctx.beginPath(); ctx.arc(p.x, p.y, 2, 0, 2 * Math.PI); ctx.fill();&#125;function randomIntFromInterval(mn, mx) &#123; return ~~(Math.random() * (mx - mn + 1) + mn);&#125; 然后在~/hexo/themes/next/source/css/_custom/custom.styl文件末尾添加以下内容：1234567.bg_content &#123; position: fixed; top: 0; z-index: -1; width: 100%; height: 100%;&#125; 最后hexo s刷新一下吧。 next主题下给每篇文章添加结束标语 在~/hexo/themes/next/layout/_macro中新建passage-end-tag.swig文件，添加以下代码至该文件中：12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #FA8072;font-size:10px;"&gt;------------- End &lt;i class="fa fa-hourglass-end" aria-hidden="true"&gt;&lt;/i&gt; Thank For Your Reading -------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 其中的icon可以去Font Awesome自行查找替换。字体大小修改其中的font-size，位置修改其中的text-align，颜色修改其中的color,可以参考这里。 接着打开~/hexo/themes/next/layout/_macro/post.swig文件，在post-body后，post-footer前，添加以下内容：12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 然后打开主题配置文件，在末尾添加：123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 最后hexo s刷新一下吧。 hexo上给首页文章添加read-more/查看原文按钮 在文章中写成如下格式即可：12345前言&lt;!-- more --&gt;全文 点击阅读全文之后，文章会自动定位到所在位置，想要修改成从头阅读需要修改主题配置文件 ：12# Automatically scroll page to section which is under &lt;!-- more --&gt; mark.scroll_to_more: 默认true改为false即可 hexo上添加音频播放器 已归档于文章——hexo上的aplayer应用 hexo上添加视频播放器 已归档于文章——hexo上的dplayer应用与嵌入视频的响应式设置 hexo上添加看板娘 已归档于文章——hexo上的live2d应用 next主题下修改文章底部#号tag标签 在~hexo/themes/next/layout/_macro中找到post.swig文件，在内搜索el=&quot;tag&quot;&gt;#，将#换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;即可，然后hexo s刷新预览吧。 想使用其他图标可在Fontawesome内自行查找。 前： 后： hexo上给文章添加脚注 首先安装hexo-footnotes插件，进入站点根目录1npm install hexo-footnotes --save 如果hexo可以自动检测所有插件，则不需要修改_config.yml， 如果不能自动检测，那么在在站点配置文件中增加： 12plugins: - hexo-footnotes 安装完成后按官方readme的方式书写。 12345678910basic footnote[^1]here is an inline footnote[^2](inline footnote)and another one[^3]and another one[^4][^1]: basic footnote content[^3]: paragraphfootnotecontent[^4]: footnote content with some [markdown](https://en.wikipedia.org/wiki/Markdown) 注脚的内容最好放在文章的最后面，否则可能会出错误。 next主题下添加本地搜索 首先安装hexo-generator-searchdb插件，进入站点根目录1npm install hexo-generator-searchdb --save 然后编辑站点配置文件，添加以下内容到任意位置：12345search: path: search.xml field: post format: excerpt limit: 10000 各选项可按官方readme自行修改。 接着编辑主题配置文件，启用本地搜索功能：123# Local searchlocal_search: enable: true 最后hexo c&amp;hexo s预览吧。 next主题下添加404页面 腾讯公益404页面 离家的路有千万条，但回家的路只有一条。 在~/hexo/themes/next/source目录下新建404.html页面，在新建页面内添加如下内容： 123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="回到我的主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 其中homePageUrl与homePageName可自定义。预览效果：https://blog.yleao.com/wrongpage 自定义diy页面 也是和上面一样的方法，在~/hexo/themes/next/source文件夹下新建404.html页面。自定义页面所需要的css和js分别放在~/hexo/themes/next/source/css文件夹与~/hexo/themes/next/source/js文件夹内。预览效果：https://www.yleao.com/wrongpage hexo上给文章添加锚点 锚点(anchor)：其实就是超链接的一种，一种特殊的超链接。 锚点可以在同一页面的不同位置间跳转，其实就是在元素间跳转，常用的场景就是，页面很长，让用户方便在页面不同部分间跳转，类似于脚注。可以用html的代码来书写。 同页面跳转 设置一个锚点链接&lt;a href=&quot;#test&quot;&gt;锚点&lt;/a&gt;。（注意：href属性的属性值最前面要加#） 在页面中需要的位置设置目标，目标写法&lt;p id=&quot;test&quot;&gt;目标&lt;/p&gt;。（注意：目标标签的属性值要与锚点链接中的href属性值一样，但不加#，例如我写的href属性值为#test，那么后面id对应的属性值为test） 案例：123&lt;a href="#red"&gt;跳转到红色&lt;/a&gt;&lt;p id="red"&gt;红色&lt;/p&gt; 跳转到红色 红色 跨页面跳转 和同页面跳转差不多，同样设置锚点链接，在href中的要跳转到的页面路径后面追加#+属性值，即&lt;a href=&quot;跳转页面.html#test&quot;&gt;锚点&lt;/a&gt;。 在跳转页面中需要的位置设置目标，目标写法&lt;p id=&quot;test&quot;&gt;目标&lt;/p&gt;。 案例： 跳转到颜色列表 next主题下给文章添加更新时间 个人用的next主题版本为5.1.4，此版本已添加此功能。 只需在主题配置文件中找到updated_at，默认为false，修改成true即可。 next主题下添加突破容器宽度限制的图片 当使用此标签引用图片时，图片将自动扩大 26%，并突破文章容器的宽度。 此标签使用于需要突出显示的图片, 图片的扩大与容器的偏差从视觉上提升图片的吸引力。 此标签有两种调用方式（详细参看底下示例）： HTML方式：使用这种方式时，为 img 添加属性 class=”full-image”即可。 标签方式：使用 fullimage 或者 简写 fi， 并传递图片地址、 alt 和 title 属性即可。 属性之间以逗号分隔。 标签方式要求 NexT 的版本在 0.4.5 或以上。 若你正在使用的版本比较低，可以选择使用 HTML 方式。如果要在图片下显示图片的标题，请使用 标签方式 并给定 title 属性。 123456789&lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;&lt;!-- 其中 class="full-image" 是必须的 --&gt;&lt;img src="/image-url" class="full-image" /&gt;&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;&#123;% fullimage /image-url, alt, title %&#125;&lt;!-- 别名 --&gt;&#123;% fi /image-url, alt, title %&#125; 预览效果： next主题下取消图片边框 直接在~/hexo/themes/next/source/css/_custom文件夹下的costom.styl文件内添加以下css代码： 12345678// 去掉图片边框.posts-expand .post-body img &#123; border: none; padding: 0px;&#125;.post-gallery .post-gallery-img img &#123; padding: 3px;&#125; next主题下侧边栏内容修改 直接在~/hexo/themes/next/layout/_macro文件夹下的sidebar.swig文件内增减代码即可，记得备份。 例如要删除分类一栏，则在sidebar.swig中找到categories，接着删除以下代码即可： 12345678910&#123;% if site.categories.length &gt; 0 %&#125; &#123;% set categoriesPageQuery = site.pages.find(&#123;type: 'categories'&#125;, &#123;lean: true&#125;) %&#125; &#123;% set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %&#125; &lt;div class="site-state-item site-state-categories"&gt; &#123;% if hasCategoriesPage %&#125;&lt;a href="&#123;&#123; url_for(categoriesPageQuery[0].path) &#125;&#125;"&gt;&#123;% endif %&#125; &lt;span class="site-state-item-count"&gt;&#123;&#123; site.categories.length &#125;&#125;&lt;/span&gt; &lt;span class="site-state-item-name"&gt;&#123;&#123; __('state.categories') &#125;&#125;&lt;/span&gt; &#123;% if hasCategoriesPage %&#125;&lt;/a&gt;&#123;% endif %&#125; &lt;/div&gt;&#123;% endif %&#125; 其他内容同理。若想要移动位置则移动对应代码顺序就可以。 next主题下点击侧边栏头像回到博客首页 首先要在主题配置文件中把头像路径配置好，比如我把头像avatar.png放在~/hexo/themes/next/source/uploads下，则修改如下： 12345# Sidebar Avatar# in theme directory(source/images): /images/avatar.gif# in site directory(source/uploads): /uploads/avatar.gif#avatar: /images/avatar.gifavatar: /uploads/avatar.png 然后再编辑~/hexo/themes/next/layout/_macro文件夹下的sidebar.swig文件，在文件中找到如下代码： 123&lt;img class="site-author-image" itemprop="image" src="&#123;&#123; url_for( theme.avatar | default(theme.images + '/avatar.gif') ) &#125;&#125;" alt="&#123;&#123; theme.author &#125;&#125;" /&gt; 再其前后加上&lt;a href=&quot;/&quot;&gt;&lt;/a&gt;即可，如下： 12345&lt;a href="/"&gt; &lt;img class="site-author-image" itemprop="image" src="&#123;&#123; url_for( theme.avatar | default(theme.images + '/avatar.gif') ) &#125;&#125;" alt="&#123;&#123; theme.author &#125;&#125;" /&gt;&lt;/a&gt; next主题下添加文章置顶与置顶标志 安装hexo置顶插件 12$ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save 然后在需要置顶的文章的Front-matter中加上top: 10（数字＞1）即可，多篇置顶文章按top值排序，如下：123456789101112---title: 遍地苦难尘tags: - life - music - filmcategories: - 生活拾空abbrlink: 31015date: 2018-10-11 14:11:08top: 10--- 设置置顶标志 打开~/hexo/themes/next/layout/_macro目录下的post.swig文件，定位到&lt;div class=&quot;post-meta&quot;&gt;后，插入如下代码：1234&#123;% if post.top %&#125; &lt;font color=#FFFFFF&gt;&lt;b style="background-color:#A9A9A9"&gt; Top &lt;/b&gt;&lt;/font&gt; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125; next主题下添加代码块复制功能 下载第三方插件clipboard.js： clipboard.js clipboard.min.js 推荐 保存文件clipboard.js或者clipboard.min.js 到目录~/hexo/themes/next/source/js/src下 在~/hexo/themes/next/source/js/src同目录下，创建clipboard-use.js，添加如下代码： 1234567891011121314151617/*页面载入完成后，创建复制按钮*/!function (e, t, a) &#123; /* code */ var initCopyCode = function()&#123; var copyHtml = ''; copyHtml += '&lt;button class="btn-copy" data-clipboard-snippet=""&gt;'; copyHtml += ' &lt;i class="fa fa-clipboard"&gt;&lt;/i&gt;&lt;span&gt;copy&lt;/span&gt;'; copyHtml += '&lt;/button&gt;'; $(".highlight .code pre").before(copyHtml); new ClipboardJS('.btn-copy', &#123; target: function(trigger) &#123; return trigger.nextElementSibling; &#125; &#125;); &#125; initCopyCode();&#125;(window, document); 在~/hexo/themes/next/source/css/_custom/custom.styl文件中添加如下代码： 123456789101112131415161718192021222324252627282930313233343536//代码块复制按钮.highlight&#123; //方便copy代码按钮（btn-copy）的定位 position: relative;&#125;.btn-copy &#123; display: inline-block; cursor: pointer; background-color: #eee; background-image: linear-gradient(#fcfcfc,#eee); border: 1px solid #d5d5d5; border-radius: 3px; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; -webkit-appearance: none; font-size: 13px; font-weight: 700; line-height: 20px; color: #333; -webkit-transition: opacity .3s ease-in-out; -o-transition: opacity .3s ease-in-out; transition: opacity .3s ease-in-out; padding: 2px 6px; position: absolute; right: 5px; top: 5px; opacity: 0;&#125;.btn-copy span &#123; margin-left: 5px;&#125;.highlight:hover .btn-copy&#123; opacity: 1;&#125; 修改~/hexo/themes/next/layout/_layout.swig文件，向文件中&lt;/body&gt;前一行插入如下代码： 12&lt;script type="text/javascript" src="/js/src/clipboard.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/clipboard-use.js"&gt;&lt;/script&gt; 如下第22、23行效果： 1234567891011121314151617181920212223242526&lt;!DOCTYPE html&gt;&#123;% set html_class = 'theme-next ' + theme.scheme %&#125;&#123;% if theme.motion.enable %&#125; &#123;% set html_class = html_class + ' use-motion' %&#125;&#123;% endif %&#125;&lt;html class="&#123;&#123; html_class | lower &#125;&#125;" lang="&#123;&#123; config.language &#125;&#125;"&gt;&lt;head&gt; &#123;% include '_partials/head.swig' %&#125; &lt;title&gt;&#123;% block title %&#125;&#123;% endblock %&#125;&lt;/title&gt; &#123;% include '_third-party/analytics/index.swig' %&#125;&lt;/head&gt;&lt;body itemscope itemtype="http://schema.org/WebPage" lang="&#123;&#123; page.lang || page.language || config.language &#125;&#125;"&gt; ... ... &#123;% include '_third-party/mathjax.swig' %&#125; &#123;% include '_third-party/scroll-cookie.swig' %&#125; &#123;% include '_third-party/exturl.swig' %&#125; &lt;script type="text/javascript" src="/js/src/clipboard.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/clipboard-use.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 代码复制功能到此添加完毕，所有文件添加及修改状态如下： ~/hexo/themes/next/source/js/src/clipboard.min.js 新增~/hexo/themes/next/source/js/src/clipboard-use.js 新增~/hexo/themes/next/source/css/_custom/custom.styl 修改~/hexo/themes/next/layout/_layout.swig 修改]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>经验</tag>
        <tag>hexo</tag>
        <tag>plugin</tag>
        <tag>整合</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[提取网易云外链]]></title>
    <url>%2F2018%2F0831%2F%E6%8F%90%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E5%A4%96%E9%93%BE.html</url>
    <content type="text"><![CDATA[之前因为版权原因网易云的外链基本上都用不了，后来可以打开审查用ctrl+F在源码搜索生成外链播放器的方式来获取外链，不过后面也不行了，提取出来的外链全都不能播放，都是404。 方法一：进入网易云，选择要提取外链的歌曲页面并播放。 F12或者ctrl+shift+i进入审查页面。再按照下图依次点击，右键图中第三个选项，然后copy/copy link address，外链get。 方法二：和上面一样进入网易云，选择要提取外链的歌曲页面并播放。 F12或者ctrl+shift+i进入审查页面。再按照下图依次点击，点完第二个的时候F5刷新一下页面，第四个即为外链地址。]]></content>
      <categories>
        <category>Experience</category>
      </categories>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网页工具备忘]]></title>
    <url>%2F2018%2F0831%2F%E7%BD%91%E9%A1%B5%E5%B7%A5%E5%85%B7%E5%A4%87%E5%BF%98.html</url>
    <content type="text"><![CDATA[小记这两天看了眼自己的书签栏，真是密密麻麻都快铺满了这个屏幕，感觉是时候清理一下了。把一些失效的网页删掉，暂时整理了一些感觉还挺好用的就放在这里吧，以后会慢慢更新。有关steam的网页工具可能要重新发一篇，实在是太多了。 工具类 格式转换cloudconvert officeconverter files-conversion smallpdf 在线剪辑123apps lightpdf 图片放大waifu2x 线稿上色paintstransfer 卡密转让蜜蜂178 临时邮箱anyalias 10minute dropmail 24mail b站屏蔽词harrynull 视频接口已归档于文章——解析接口 host老D 网页iconfontawesome 音乐外链ytmp3 外链转换 在线制图processon制作下载流程图、思维导图、原型图、UML、网络拓扑图等 图床sm.ms imgur API接口imjad 小航实验室 Markdown在线编辑器马克飞象 小书匠 ping/ip检测与测速站长之家 whoer ipip speedtest ip签名档制作小航实验室 ntrqq IPv6连接测试test-ipv6 RGB颜色拾取与转换yovi yuan 站长工具站长之家 资源下载类 音乐下载2333 实验室因不可抗力不能再使用。 gequdaquan sonimei 国内视频下载小视频下载支持下载爱奇艺、微信公众号、优酷、腾讯视频、快手、土豆、QQ浏览器、迅雷、V电影、开眼等平台的小视频。 vranks支持下载今日头条、阳光宽频网、秒拍视频、腾讯视频、微博视频、微信、百度视频、梨视频、西瓜视频等。 15um可通过微信PC版、搜狗微信、或手机微信复制包含视频的公众号文章链接，粘贴到微信视频下载工具并回车，即可方便快捷的下载你要的视频。亦支持抖音。 硕鼠老牌网站了，可在线解析并下载视频，还可通过安装 WIN、Mac OSX、 Android 各版本客户端来进行下载。 biliplusb站视频、弹幕下载。 小航实验室抖音无水印下载。 国外视频下载savefrom converto y2mate clipconverter onlineyoutube 谷歌crx下载2333 实验室因不可抗力不能再使用。 chrome-extension-downloader sinaapp 字体下载fontke 装机下载msdn 知网文献下载cnki-downloader因不可抗力（接口服务器失效）不能再使用，期待回归。 SCI文献下载yovi由于一些原因，SCI-Hub经常性的更换服务器或者域名，此工具可实时更新可用地址。 搜索查询类 微博图片作者识别2333 实验室因不可抗力不能再使用。 Find who he/she is 谁是Po主 密码泄露查询haveibeenpwned 发音指南forvo 世界时间worldtimebuddy timeanddate 国家代号与区号Area Code jctrans 移动端应用数据查询七麦数据 网页时光机wayback mechine 网商历史价格查询西贴 聚合搜索快搜 截图搜索动漫whatanime 网络实时攻击norse 限免查询反斗限免 优惠码查询海淘优惠码 国内优惠码 聚合查询ip138 游戏类 l4d2插件kk175 mc材质补丁optifine R18补丁检索uncensorpat CSGO全地图点位5e建议使用5e的报点 3dm CSGO烟雾模拟5e CSGO在线准心nbcsgo CSGO汰换模拟csgola CSGO磨损查询csgoexchange]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>整合</tag>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[chrome魔法上网扩展]]></title>
    <url>%2F2018%2F0830%2Fchrome%E9%AD%94%E6%B3%95%E4%B8%8A%E7%BD%91%E6%89%A9%E5%B1%95.html</url>
    <content type="text"><![CDATA[The Great Firewall，由原北京邮电大学校长设计，一般情况下主要指中国对因特网内容进行自动审查和过滤监控、由计算机与网络设备等软硬件所构成的系统。网站被屏蔽的原因一般只有两点：一是违反宪法，二是攻击国家领导人。防火墙对于这些违规信息会用DNS污染（对于域名）和屏蔽IP的方式（对于IP）进行过滤，使国内用户无法访问，世界最大的搜索引擎谷歌就被DNS污染。 网站被墙的方式主要有两种：域名被墙或IP被墙。域名被墙没什么好说的，因为网站里有太多敏感内容，这是针对性的。IP被墙，有可能是网站的主机商的IP段刚好进入墙的黑名单。还有就是受到同IP下、同一台服务器上其他被墙网站的影响而被波及。这会导致一些网站本身并没有问题却依然被屏蔽。 有时候我们需要去查阅国外一些很好的作品设计和论文文献，所以不得不采取一些措施。 我个人不推荐这种魔法上网姿势，只是这种方式简单且免费，适合小白。另外建议不要在这种插件上进行购买续费，老牌的还好，要不然随时有可能会跑路。有能力的话个人很推荐自己搭建。 为防止广告嫌疑，以下推荐的都有免费流量与节点，且不保证时效性。速度和流量或许不多，但是查阅资料是够用的了。 Tunnello每月最多6GB的免费流量 （每天200M）1https://chrome.google.com/webstore/detail/tunnello-vpn-unblock-ultr/hoapmlpnmpaehilehggglehfdlnoegck roxy udʌ免费，有俄罗斯节点和欧美节点1https://chrome.google.com/webstore/detail/proxy-vpn-to-unblock-any/ookhnhpkphagefgdiemllfajmkdkcaim Hoxx udʌ每月免费2G1https://chrome.google.com/webstore/detail/hoxx-vpn-proxy/nbcojefnccbanplpoffopkoepjmhgdgh Safer udʌ免费，节点不多1https://chrome.google.com/webstore/detail/safervpn-free-vpn-privacy/cocfojppfigjeefejbpfmedgjbpchcng Windscribe免费2G，仅有欧美和香港节点免费。这个的桌面端曾进过humblebundle，记得是一年凭证，因为有毛子节点所以用过一阵子，还算可以1https://chrome.google.com/webstore/detail/windscribe-free-vpn-and-a/hnmpcagpplmpfojmgmnngilcnanddlhb 因为想要下载这些扩展首先就需要魔法上网，所以推荐这个网站来下载这些扩展，很方便，另外这个网站也可以。使用方法网站里面都有说明，很简单。下载完成之后在chrome浏览器里的地址栏里输入chrome://extensions/，把下好的.crx文件直接拖进去就完成安装了。 一些用户注重隐私可能并不喜欢用自己的邮箱，或者想使用多个邮箱来薅一些流量，那么就会需要用到临时邮箱。以下是一些还不错的临时邮箱。https://anyalias.com/https://10minutemail.net/http://dropmail.me/http://24mail.chacuo.net/ 相关文章： VPS上搭建ss ss配合各插件使用]]></content>
      <categories>
        <category>GFW</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>gfw</tag>
        <tag>扩展</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mirage中VIP跳B小]]></title>
    <url>%2F2018%2F0818%2FMirage%E4%B8%ADVIP%E8%B7%B3B%E5%B0%8F.html</url>
    <content type="text"><![CDATA[相信很多玩家看到一些身法厉害的大佬旋转跳进狗洞然后再从vip跳B小很帅气，但是都觉得太难，其实跳B小这个难度并不算太大，我自己的感觉比单人上山要容易一点，只要掌握几个点再多加练习就可以了，目前我觉得最难的应该是单人上树。 此文同发于steamcn——蒸汽动力 之所以觉得这个跳跃不难是因为不怎么需要加空速，不需要很复杂的跳跃技巧，只需要一点旋转跳。可以看左上角的速度状态（控制台：cl_showpos 1可开启），vel是我的速度，人拿刀的地速是250，我从窗台起跳到B小的整个过程速度都没超过260，我起跳的瞬间速度也只有240多。所以这个跳跃只是熟练度的问题，只要多练就游刃有余了。 以下演示都是在64tick服务器里操作的，练习的话建议在128tick服务器里练习，128tick里跳跃的连贯性比64tick要好很多。 先说说整个跳跃路线，首先进vip后沿着墙直走，然后到第一个起跳点向右旋转跳跳到窗台，之后再在窗台走大约一步的样子到达第二个起跳点，接着一个小幅度的旋转跳上B小，几乎不算是旋转跳，就是普通的跳跃稍微向右拉一下鼠标。蹲和不蹲都可以上B小，蹲可以增加容错率。 另外路线不是死的，要根据自身的速度和习惯去进行调整。 要注意窗台的起跳位置，不要撞到头，也不要直接掉下去，还有就是B小的落点位置。 接着说一下刚开始学这个跳跃会遇到的问题，大致有三个，第一个是旋转跳跳到窗台上跳不好。第二个就是找不到第二个起跳点的timing，这个也是最难的一个，要么撞到头，要么就起跳晚了掉下去了。这个我自己完全是凭感觉，也可以用找参照物的方法，比如说当看到左边窗台消失的一瞬间立马起跳，大家可以凭自己的感觉去找参照物来找到适合自己起跳的timing。这个是整个跳跃过程中最难的，需要时间练习去掌握节奏。 第三就是B小的落点位置掌握不好，要么鼠标向右拉多了，要么就是拉少了，不过这个问题不大，多跳几下就有感觉了。 解决第一和第三个问题就是多练，这已经是很简单的旋转跳了，起跳点和落脚点要精确一点，记住第一次起跳的点，多跳几次自然就熟练了。 第二个问题的关键在于第二个起跳点的时机，我的练习方法就是一开始跳上窗台后先别跳B小，直接往下面跳，但是别撞头，自己慢慢找到合适的起跳时机，当每次直接往下跳的时候都没撞到头了，再开始跳B小。 拿刀地速最高所以容错率高，拿枪的话也是可以的，M4A4地速225、喷子famas这些地速220也可以跳，但是容错率低，像沙鹰地速230就会好很多。如果前面加速够的话AK地速215也是没问题的，只需要在前面的旋转跳那里多加点空速就ok。 顺便放个自建的练枪服，128tick的，可以没事打打电脑，本来也不想上锁，但是ddos攻击真的伤不起，环境太恶劣了。地址：139.199.187.43 密码：1113]]></content>
      <categories>
        <category>Experience</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>csgo</tag>
        <tag>game</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云COS+PicGo自建图床和快速上传]]></title>
    <url>%2F2018%2F0818%2F%E8%85%BE%E8%AE%AF%E4%BA%91COS-PicGo%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A%E5%92%8C%E5%BF%AB%E9%80%9F%E4%B8%8A%E4%BC%A0.html</url>
    <content type="text"><![CDATA[因为现在网上的各种图床都限制大小和数量，使用起来很不方便，全站 https 也越来越普及，http 图床虽然不多，另外隐私方面也是一大问题，例如Find who he/she is和谁是Po主，不过在xx说隐私还是有点妄想了/摊手。 所以自建图床还是有点用处的。 首先还是利用腾讯云COS，进入对象储存页面创建一个bucket。 创建文件夹之后可以新建几个文件夹进行分类，例如 /image、/video、/music等等。 创建完成之后你所上传的图片视频等文件就会储存在这里面。 下载PicGo，macOS用户请下载最新版本的dmg文件，windows用户请下载最新版本的exe文件，linux用户请下载AppImage文件。 Picgo现在支持微博图床、七牛图床、腾讯云COS v4\v5版本、又拍云、GitHub、SM.MS、阿里云OSS、Imgur。非常感谢原作者的创作和无私分享。 这里为各图床的使用指南。 PicGo安装完成之后打开可看到如下窗口： 图片上传之后会把图片链接自动复制到粘贴板里。链接格式可以修改，有Markdown、HTML、URL、UBB、Custom。上传的图片可在相册里面预览、且修改图片url。 接下来要把腾讯云上创建的储存桶连接到PicGo，点击PicGo面板上的图床设置-腾讯云COS。可看到如下： 因为现在的COS版本基本都是V5了，所以要勾选COS版本为V5，下面的secretld、secretkey、appid则要去云API密匙新建，如以前有密匙则没必要新建，直接用就可以。 存储的空间名是你的bucket名字，包括后面的数字。储存区域在储存桶列表有显示。如果你想把图片上传到你的bucket空间的某个文件夹下，则需要在PicGo里的指定存储路径里加上你的文件夹路径。比如image/（注意一定要加/）。 全部填好之后点确定并且要记得点击设为默认图床，这样上传才会默认走的是腾讯云COS。上传图片之后则会将图片自动上传到腾讯云COS里。 利用CDN给图床加速，进入储存桶列表点击所创建的储存桶，然后点击域名管理，并开启默认域名加速，源站类型为XML节点，开启回源鉴权。单击【保存】之后，“默认加速域名”下会出现 CDN 鉴权状态提示，可通过单击页面上【鉴权配置】开始配置。 在跳转界面中单击“鉴权配置”旁边的开启按钮，输入鉴权 Key 和有效时间。 如不清楚什么是鉴权配置可点击官方文档。]]></content>
      <categories>
        <category>Experience</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>github</tag>
        <tag>搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo上的dplayer应用与嵌入视频的响应式设置]]></title>
    <url>%2F2018%2F0810%2Fhexo%E4%B8%8A%E7%9A%84dplayer%E5%BA%94%E7%94%A8%E4%B8%8E%E5%B5%8C%E5%85%A5%E8%A7%86%E9%A2%91%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E7%BD%AE.html</url>
    <content type="text"><![CDATA[小记dplayer是一个HTML5弹幕视频播放器，可以帮助我们轻松建立一个弹幕视频。那么如何将dplayer应用在hexo上，这里就需要借助到hexo的一个插件了。部署dplayer我是用的hexo插件，部署aplayer我是用的提取dist文件的方法。这样可以相互参考，喜欢哪种方式部署就用哪种。 hexo插件 github地址hexo-tag-dplayer 安装安装模块:1npm install hexo-tag-dplayer --save 使用代码：1&#123;% dplayer key=value ... %&#125; key包括：12345678dplayer options: 'autoplay', 'loop', 'screenshot', 'hotkey', 'mutex', 'dmunlimited' : bool options, use "yes" "y" "true" "1" "on" or just without value to enable 'preload', 'theme', 'lang', 'logo', 'url', 'pic', 'thumbnails', 'vidtype', 'suburl', 'subtype', 'subbottom', 'subcolor', 'subcolor', 'id', 'api', 'token', 'addition', 'dmuser' : string arguments 'volume', 'maximum' : number argumentscontainer options: 'width', 'height' : string, used in container element styleother: 'code' : value of this key will be append to script tag 以上原型到dplayer选项的映射：12345678910111213141516171819202122232425262728293031323334353637&#123; container: "you needn't set this", autoplay: 'autoplay', theme: 'theme', loop: 'loop', lang: 'lang', screenshot: 'screenshot', hotkey: 'hotkey', preload: 'preload', logo: 'logo', volume: 'volume', mutex: 'mutex', video: &#123; url: 'url', pic: 'pic', thumbnails: 'thumbnails', type: 'vidtype', &#125;, subtitle: &#123; url: 'suburl', type: 'subtype', fontSize: 'subsize', bottom: 'subbottom', color: 'subcolor', &#125;, danmaku: &#123; id: 'id', api: 'api', token: 'token', maximum: 'maximum', addition: ['addition'], user: 'dmuser', unlimited: 'dmunlimited', &#125;, icons: 'icons', contextmenu: 'menu',&#125; 检查如果出现某些错误，使用raw代码检查，raw代码内的内容不会被渲染：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&#123;% raw %&#125;&lt;div id="player1" class="dplayer"&gt;&lt;/div&gt;&lt;script src="dist/DPlayer.min.js"&gt;&lt;/script&gt;&lt;!-- use your path --&gt;&lt;script&gt;var dp = new DPlayer(&#123;&#123; container: document.getElementById('dplayer'), autoplay: false, theme: '#FADFA3', loop: true, screenshot: true, hotkey: true, logo: 'logo.png', volume: 0.2, mutex: true, video: &#123; url: 'demo.mp4', pic: 'demo.png', thumbnails: 'thumbnails.jpg', type: 'auto' &#125;, subtitle: &#123; url: 'webvtt.vtt', type: 'webvtt', fontSize: '25px', bottom: '10%', color: '#b7daff' &#125;, danmaku: &#123; id: 'demo', api: 'https://api.prprpr.me/dplayer/', token: 'demo', maximum: 3000, user: 'DIYgod', margin: &#123; bottom: '15%' &#125;, unlimited: true &#125;, contextmenu: [ &#123; text: 'custom contextmenu', link: 'https://github.com/MoePlayer/DPlayer' &#125; ]&#125;);&lt;/script&gt;&#123;% endraw %&#125; 更多信息参考dplayer docs。 示例12&#123;% dplayer "url=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.mp4" "api=https://api.prprpr.me/dplayer3/" "addition=https://api.prprpr.me/dplayer3/v2/bilibili?aid=120040" "pic=https://moeplayer.b0.upaiyun.com/dplayer/hikarunara.jpg" "id=9E2E3368B56CDBB4" "loop=yes" "theme=#FADFA3" "autoplay=false" "token=tokendemo" %&#125; &#123;% dplayer 'url=some.mp4' "id=someid" "api=https://api.prprpr.me/dplayer/" "addition=/some.json" 'code=player.on("loadstart",function()&#123;console.log("loadstart")&#125;)' "autoplay" %&#125; 通常用每个视频的iframe通用分享代码或者video代码直接插入到markdown文件中，则生成的页面中视频不是响应式的。于是便找到了下面这个插件，直接给分享的视频添加响应式。 hexo插件 github地址hexo-tag-video 安装安装模块: 1npm install hexo-tag-video --save 如果你的hexo版本低于3.0，则在_config.yml添加如下：12plugins: - hexo-tag-video 使用代码： 1&#123;% video 'videoCode' %&#125; 通常，videoCode为视频分享下的嵌入链接。 示例1&#123;% video &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/YES16mVB0lQ?rel=0&amp;amp;showinfo=0" frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen&gt;&lt;/iframe&gt; %&#125;]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>github</tag>
        <tag>hexo</tag>
        <tag>搭建</tag>
        <tag>plugin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[移动端在线预览与调试]]></title>
    <url>%2F2018%2F0810%2F%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%9C%A8%E7%BA%BF%E9%A2%84%E8%A7%88%E4%B8%8E%E8%B0%83%E8%AF%95.html</url>
    <content type="text"><![CDATA[xxxxx]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>wap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Coding+Github双服务器托管hexo]]></title>
    <url>%2F2018%2F0809%2FCoding-Github%E5%8F%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%98%E7%AE%A1hexo.html</url>
    <content type="text"><![CDATA[Coding的部署方式和Github几乎无差。绑定腾讯云可升级为银牌会员，支持受限的 Pages 自定义域名，受限的意思是当来访者访问绑定自定义域名的 Pages 网页时，会看到『Hosted by CODING Pages』的跳转页面，可直接点击跳过该页面或五秒后自动跳转到目标页面。可免费去除，只需在网站上放置『Hosted by CODING Pages』的链接就行。详细点此了解。 此文只讲解如何部署在Coding上，和布置过程中遇到的一些问题。 _config.yml配置想要同时部署到2个平台，就要修改博客根目录下面的_config.yml文件中的deploy如下根据Hexo官方文档需要修改成下面的形式 12345deploy: type: git repo: github: &lt;repository url&gt;,[branch] coding: &lt;repository url&gt;,[branch] 因为我在github上用的是https的push方式，coding上用的是ssh的push方式，所以我修改的形式如下 coding上创建一个新项目这里需要特别注意的是，由于我们是从本地仓库迁进行迁移，所以远程仓库中无需创建任何文件。 在新建立项目的时候，项目名称必须和用户名称完全一致，注意不是昵称，否则之后部署Pages服务时就会出现静态资源加载失败，网页样式丢失的情况。 网站地址样式为：http://uesername.coding.me/projectname 如果你的静态Pages访问地址为http://yleao.coding.me/myblog，那么这个静态资源一定加载失败了，进去看到的就是简陋的博客目录。 正确的样式应该为：http://yleao.coding.me/yleao 将本地仓库关联到远程仓库创建仓库后，进入代码浏览，将仓库地址复制到剪贴板中，这里我使用的是ssh传输。 用ssh传输方式需要添加账户公匙。用以下命令来生成ssh key:打开命令行终端输入ssh-keygen -t rsa -C &quot;your_email@example.com&quot;( 你的邮箱)，连续点击 Enter 键即可。123456ssh-keygen -t rsa -C "xxxxx@xxxxx.com" # Creates a new ssh key, using the provided email as a label# Generating public/private rsa key pair.Enter file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter] // 此处直接 Enter 键即可Enter passphrase (empty for no passphrase): //此处直接 Enter 键即可# 即三次回车即可生成 ssh key 成功之后显示如下信息： 1234Your identification has been saved in /Users/you/.ssh/id_rsa.# Your public key has been saved in /Users/you/.ssh/id_rsa.pub.# The key fingerprint is:# 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com ssh key生成成功之后，点击我的头像，进入我的账号，点击左侧的SSH公匙，点击新增公匙。 在终端输入open ~/.ssh，用文本编辑器打开「id_rsa.pub」文件（此处是生成公钥的默认名称，如果生成公钥时采用了其他名称，打开相对应的文件即可） 复制全部内容，把复制的内容全部添加到公匙内容里。公钥名称可随意填写，公钥有效期可选择具体日期或设置永久有效。 点击「添加」，然后输入账户密码即可成功添加公钥。 添加后，在git bash命令输入：1ssh -T git@git.coding.net 如果得到下面提示就表示公钥添加成功了：1Coding.net Tips : [Hello ! You've conected to Coding.net by SSH successfully! ] 最后使用部署命令就能把博客同步到coding上面：1hexo deploy -g pages服务方式部署进入项目里，点击左侧的代码，再点击pages服务。创建静态coding pages之后点击小齿轮进入设置页面。 可强制HTTPS访问，可绑定自定义域名，绑定之后去给域名添加CNAME解析，github pages走国外路线，coding pages走国内路线，同时还是可以用CDN服务给coding pages进行加速。]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>github</tag>
        <tag>hexo</tag>
        <tag>搭建</tag>
        <tag>coding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[通过CDN直接给GithubPages加速]]></title>
    <url>%2F2018%2F0809%2F%E9%80%9A%E8%BF%87CDN%E7%9B%B4%E6%8E%A5%E7%BB%99GithubPages%E5%8A%A0%E9%80%9F.html</url>
    <content type="text"><![CDATA[上篇文章我写的是腾讯云COS+Github双服务器托管个人博客，再利用CDN加速服务给云储存上的对象加速，若是不想在国内搭建则可以直接利用腾讯云的CDN加速服务给github pages加速，让国内用户也能快速访问github上搭建的博客。 目前腾讯云CDN加速服务开通赠送300G流量，每个月50G，连续赠送6个月。对于访问量不大的博客，到期之后的资费也花不了多少钱。 先去CMD里ping一下github上的源站，然后得到ip地址，再到腾讯云CDN里开启CDN服务，需要实名认证，收费方式选择按使用流量计费。开启之后选择添加域名，填写格式按下图填写。 启动CDN之后点击管理，找到基本配置下的回源配置，不出意外的话回源配置里的回源host为刚填写的域名。点击左侧的域名管理，域名配置完成后，系统会分配对应的CNAME，以.cdn.dnsv1.com为后缀，请务必按照控制台展示的CNAME进行配置。 得到对应的CNAME之后，去解析域名。 因为我前面填写的域名为二级域名：blog.yleao.com所以我的主机记录也为blog，记录类型为CNAME，线路类型为默认，记录值填写上面CDN加速给你的记录值，默认以.cdn.dnsv1.com为后缀，此条解析为国内用户访问。这样github pages上的博客在国内就被CDN加速了，海外依然是使用github的ip，能同时提升国内与国外的访问速度。 不同的 DNS 服务商，CNAME 生效的时间略有不同，一般会在半个小时之内生效。查询是否生效在我上篇文章有提过，此处不赘述。 在开启CDN的时候可能会出现循环重定向的问题，出现这个问题的原因是重定向规则引起的，我的解决办法是进入CDN加速面板中的回源配置，勾选中间源配置，然后再绑定源服务器域名，设置协议跟随即可。 另外加速之后国内访问网站显示信息与github pages上面的内容不同步时，可以去cdn页面刷新缓存。]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>github</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[伴我同行]]></title>
    <url>%2F2018%2F0808%2F%E4%BC%B4%E6%88%91%E5%90%8C%E8%A1%8C.html</url>
    <content type="text"><![CDATA[从最初的瞎看什么，到后面因为合同到期而改名的阅后即瞎，再到政策问题之后再度回归的嘻咦啊看，虽一路曲折，却依然不变初心。 回归之后的首部作品就以如此质量，给了久久等待的我们最好的答复，一度看到泪目，这近5个月的等待是如此值得。《伴我同行》，该剧改编于“The body”是由美国作家斯蒂芬金创作的中篇小说，最初出版于1982年的“Different Seasons”系列。该系列以其四部中篇小说中的三部改编为好莱坞电影而著名，其中一篇便是《肖申克的救赎》，被提名为1994年奥斯卡最佳影片奖。本篇也荣获第59届奥斯卡金像奖最佳改编剧本提名。 瞎看再度回归选这部电影其中寓意不用明言。 “我后来再也没有交到，像12岁那年遇到的朋友。”愿以后也能一直伴你同行。]]></content>
      <categories>
        <category>生活拾空</category>
      </categories>
      <tags>
        <tag>video</tag>
        <tag>life</tag>
        <tag>music</tag>
        <tag>film</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解析接口]]></title>
    <url>%2F2018%2F0807%2F%E8%A7%A3%E6%9E%90%E6%8E%A5%E5%8F%A3.html</url>
    <content type="text"><![CDATA[油猴脚本首先安装脚本，选择关键字为破解、VIP、视频的脚本就对啦。安装完后！重启下浏览器！最后打开B站或者优酷等网站会看到下面的按钮！直接点击解析就可以了！ 嵌入使用如下代码1&lt;iframe width="800" height="400" src="http://jx.598110.com/index.php?url=https://v.qq.com/x/cover/84cu4uxrkzi0e60.html" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"&gt; &lt;/iframe&gt; 浏览器快速切换浏览器-收藏夹-添加收藏，名字随意，网址写 1javascript:window.location = ‘http://api.xfsub.com/index.php?url=‘+window.location.href http://api.xfsub.com/index.php?url=是解析接口,可以自行替换，使用的时候就是在播放页面点一下上面添加的书签，就能直接跳转解析页面了。 稳定在线解析12345678910http://www.qmaile.com/ ---------------全民解析 http://www.v718.com/ -----------------疯狂解析 http://old.flvurl.cn/ ----------------FlvUrl https://www.parsevideo.com/ ----------视频解析网 http://live.gopartook.com/ -----------VIP视频在线解析 http://tv.dsqndh.com/ ----------------全能VIP视频在线解析 http://yun.baiyug.cn/ ----------------百域云接口大全 http://jiexi.92fz.cn/ ----------------云解析接口大全 http://jiekou.xiaomil.com/ -----------小米解析接口 https://parse.lylares.com/ -----------小视频解析]]></content>
      <categories>
        <category>Experience</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>经验</tag>
        <tag>script</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo上的live2d应用]]></title>
    <url>%2F2018%2F0805%2Fhexo%E4%B8%8A%E7%9A%84live2d%E5%BA%94%E7%94%A8.html</url>
    <content type="text"><![CDATA[小记关于网页版的live2d首先是在bilibili live上看见的，也就是B站的看板娘，可支持换装、显示文字、点击播放语音动画等功能。于是就着手研究了一下，然后发现了hexo的一个插件：hexo-helper-live2d。 关于live2d Live2D目前有两个分支：Cubism和Euclid。若无特殊说明，Live2D通常是指Cubism分支。其工作原理是通过将一系列的2D图像进行平移、旋转和变形等操作，生成一个具有自然动画效果的可动人物模型。由于Live2D只需一系列2D原图即可生成具有类似于3D动画效果的模型，比3D建模耗费的时间和成本更少，因此受到很多游戏制作者，特别是小成本AVG和手游作者的喜爱。另外，Live2D生成的模型相对于真正的3D模型，可以更好地还原手绘风格。—摘自萌娘百科 其主要应用在游戏制作，漫画生成与建模等，普通用户则将其应用在电脑、手机上作为动态壁纸与网页装饰。此文主要分享如何为博客添加“看板娘”。 hexo插件 github地址hexo-helper-live2d 安装安装模块:1npm install --save hexo-helper-live2d 配置向Hexo根目录下的配置文件中添加以下内容：12345678910111213141516171819202122232425## Live2D## https://github.com/EYHN/hexo-helper-live2dlive2d: enable: true # enable: false scriptFrom: local # 默认 pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径) pluginJsPath: lib/ # 脚本文件相对与插件根目录路径 pluginModelPath: assets/ # 模型文件相对与插件根目录路径 # scriptFrom: jsdelivr # jsdelivr CDN # scriptFrom: unpkg # unpkg CDN # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中 debug: false # 调试, 是否在控制台输出日志 model: use: live2d-widget-model-wanko # npm-module package name # use: wanko # 博客根目录/live2d_models/ 下的目录名 # use: ./wives/wanko # 相对于博客根目录的路径 # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url display: # 模型位置，根据不同的模型自行调整 position: right width: 150 height: 300 mobile: # 是否适用于移动端 show: true 如下图： 模型有许多方法来使用不同的模型: 方法一：npm 模块名现有模型地址：地址使用npm install 模型的包名来安装，安装成功后模型位于/根目录/node_modules/然后将包名输入位于_config.yml的model.use中。（如下图） 方法二： live2d_models子目录名称 在博客根目录下创建一个live2d_models文件夹. 在此文件夹内新建一个子文件夹. 将你的 Live2D 模型复制到这个子文件夹中. 将子文件夹的名称输入_config.yml的model.use中. 示例 你的模型叫mymiku. 在博客根目录 (应当有_config.yml、sources、themes) 新建名为live2d_models的目录，再在其中建一个名为mymiku的子文件夹. 将模型复制到 /live2d_models/mymiku/中.现在在此文件夹里应当有一个 .model.json文件 (例如mymiku.model.json) 将 子文件夹名称mymiku输入到位于根目录_config.yml的model.use中. (如下图) 到此live2d就安装成功了，看看效果吧。 如何获取模型 首先先说说模型格式，一般hexo-helper-live2d的模型格式都为下面两种 12345678910111213141516这种moc+json+文件夹材质的是2.x版本的工程文件│ model.model.json // 模型json数据│ model.moc // 模型文件│└─model.1024 texture_00.png // 模型材质贴图（不同分辨率用） 这种json文件内容 是与当前目录的文件对应的&#123; "type": "Live2D Model Setting", "name": "makoto0", "model": "makoto0.moc", "textures": [ "makoto0.2048/texture_00.png" ]&#125; 获取方法贴吧、论坛上的分享，live2d官方分享库，可能需要修改模型格式 。游戏内提取，注意版权问题。自己制作。 最后再贴一个在github上找到的模型，种类挺多，可预览，github地址。修改modelname进行预览，modelname可在这里查阅，预览地址。使用方法很简单，打包下载下来，解压后在/live2dDemo-master/assets/中找到喜欢的模型，按照上面的方法二，直接把模型所在的文件夹拖入到博客根目录中的live2d_models里，再修改_config.yml 里的 model.use即可。]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>github</tag>
        <tag>hexo</tag>
        <tag>plugin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[腾讯云COS+CDN+Github双服务器托管hexo]]></title>
    <url>%2F2018%2F0802%2F%E8%85%BE%E8%AE%AF%E4%BA%91COS-CDN-Github%E5%8F%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%98%E7%AE%A1hexo.html</url>
    <content type="text"><![CDATA[把博客分别托管在腾讯云对象储存 和 Github Pages上，再通过DNS解析进行访问优化。由于github是国外的服务器，终归会对国内的用户访问造成一定的影响。于是打算再在国内服务器上部署一套，配合上国内的CDN加速，再利用DNS解析让国外用户和国内用户选择最优路线,从而提升访问速度。 此文只讲解如何部署在腾讯云COS上。 创建bucket并开启静态网站云对象储存（COS）是什么可以自行查阅腾讯官方的details，此处不必赘述首先进入对象储存页面创建一个bucket，因为在国内所以所属地域选择国内的地址即可 创建完成之后选择上传文件，把hexo/public/下的所有文件，包括其public目录下所有文件夹一并拖入并上传 上传完成 关于静态网站的概念：静态网站是指包含静态内容（如 HTML）或客户端脚本的网站，用户可以通过控制台对已绑定自定义域名的存储桶，配置静态网站。腾讯云 COS 支持静态网站的托管，不支持服务器端脚本编写。当需要部署动态网站时，则推荐使用云服务器 CVM 进行服务端代码部署。 接着点击基础配置，因为我是用来部署hexo静态博客的，所以直接下来最底部点击静态网站旁的编辑开启当前状态，索引文档为必填，是你上传的文件列表里的xxxx.html，一般默认为index.html，强制 HTTPS（可选），错误文档（可选），设置网站的重定向规则（可选），设置完成后，单击保存即可。 CDN 加速配置CDN 加速适用于对 COS 存储桶中的内容进行下载、分发，特别是对于相同内容反复下载的使用场景。用户可对以下域名进行管理，实现存储桶中对象的快速下载和分发： 默认域名：即 COS 源站域名，是创建存储桶时，由系统根据存储桶名称和地域自动生成的，要与默认加速域名区分开。 默认加速域名：经由 CDN 加速节点的域名，系统默认生成，用户可选择开启或关闭。 自定义域名：用户可以为存储桶绑定已备案的自定义域名，通过自定义域名访问存储桶中的对象。 默认加速域名操作步骤：单击存储桶详情界面上方的域名管理，单击编辑，把默认加速域名的当前状态设置为开启。源站类型通常默认为 XML 节点，如果作为源站的存储桶开启了静态网站，并且希望为静态网站加速，则选择为静态网站节点。当存储桶为公有读时，则不需要开启 回源鉴权，最后单击【保存】按钮即可开启 CDN 加速。注意：如果用户在之前从未使用过腾讯云 CDN 服务，则无法进入域名管理，需先进入 CDN 控制台使用 CDN 服务。 自定义加速域名操作步骤：进入域名管理页面，在第二栏“自定义加速域名”处单击添加域名，输入待绑定的自定义域名，如ww w.example.com，回源鉴权可不开启，单击右侧的保存即可完成域名添加。 注意:用户为域名启用 CDN 加速之后，任何人都可以通过此域名直接访问源站，所以如果您的数据有一定的私密性，请您务必通过 鉴权配置 来保护您的源站数据。 自定义域名添加DNS解析当把上一步域名绑定储存桶和CDN加速域名完成之后，就可以开始优化DNS解析了。（默认域名无须添加解析）到你的域名解析页面，添加上两条解析。 因为我前面绑定储存桶的自定义域名为二级域名：blog.yleao.com 所以我的主机记录为blog，记录类型为CNAME，线路类型为国外，指向在github pages上部署的hexo，记录值填写github上的域名，此条解析为国外用户访问,没经过国内CDN加速。 另一条主机记录也为blog，记录类型为CNAME，线路类型为默认，指向在腾讯COS上部署的hexo,记录值填写上面CDN加速给你的记录值，默认为域名.cdn.dnsv1.com，此条解析为国内用户访问,经过国内CDN加速。国内使用COS，海外使用Github，这样能相应的提升访问速度。 测试DNS查询：选择CNAME类型，看响应ip是否为添加解析的记录值 ping检测与速度测试：5个线路全部勾选上 从上图可以看出通过双服务器搭建的blog对于5条线路（国内和海外）的响应都是非常的快，国内的平均响应为28ms,国外的平均响应为23ms，也可以看出国内CDN成功加速，想要知道CDN是否加速成功，只需在不同地区ping同一个网址，得到不同的IP地址，那么这种情况就可以判断该网站开了CDN加速，图中最下显示19个不同的独立ip。 或者在cmd里ping一下域名也可知道是否CDN加速成功。如下图显示tencdns.net证明加速成功。 下面对比单服务器架设 我的顶级域名部署在腾讯云服务器广州区里，没开启CDN加速 对比可以看出无论是最快响应、最慢响应，还是平均响应，都不及我的二级域名。且没有CDN加速，所以只有一个独立IP。 注意修改或编辑hexo之后要记得同步到两个服务器内，如果只同步了一个服务器，那么从国内和国外访问域名显示的内容则会不一样。比如只同步了国内服务器，那么从国内访问域名则会看到最新的同步内容，国外访问的话则不会，反之亦然。]]></content>
      <categories>
        <category>Hexo折腾</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>github</tag>
        <tag>hexo</tag>
        <tag>搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[嵌入测试]]></title>
    <url>%2F2018%2F0802%2F%E5%B5%8C%E5%85%A5%E6%B5%8B%E8%AF%95.html</url>
    <content type="text"><![CDATA[可引入html来设置 视频嵌入YOUTUBE TEST 1&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/7OYkWSW7u4k" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt; BILIBILI TEST 1&lt;iframe width="300" height="176" src="//player.bilibili.com/player.html?aid=7728624&amp;cid=12668755&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"&gt; &lt;/iframe&gt; 音乐嵌入framespacing=”0”框架与框架间保留的空白的距离frameborder – 设定框架的边框,取值为(1|0),缺省值为11 – 在每个页面之间都显示边框0 – 不显示边框border=”0”设定框架的边框厚度，以 pixels 为单位auto=”0”0为不自动播放1为自动播放 12&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=694286&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt;&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&amp;id=694286&amp;auto=0&amp;height=32"&gt;&lt;/iframe&gt; 图片嵌入普通嵌入 12![test](https://image-1253170309.cos.ap-guangzhou.myqcloud.com/image/嵌入测试111111111.jpg)&lt;img src="https://image-1253170309.cos.ap-guangzhou.myqcloud.com/image/嵌入测试111111111.jpg" alt="test" /&gt; 固定大小且居中 1&lt;div align=center&gt;&lt;img width = '150' height ='150' src ="https://image-1253170309.cos.ap-guangzhou.myqcloud.com/image/嵌入测试111111111.jpg"/&gt;&lt;/div&gt; 自定义尺寸 1&lt;img width = '40' height ='150' src ="https://image-1253170309.cos.ap-guangzhou.myqcloud.com/image/嵌入测试111111111.jpg"/&gt;]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>test</tag>
        <tag>video</tag>
        <tag>music</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[统计测试]]></title>
    <url>%2F2018%2F0802%2F%E7%BB%9F%E8%AE%A1%E6%B5%8B%E8%AF%95.html</url>
    <content type="text"><![CDATA[本站总访问量次 本站访客数人次 本文总阅读量次 setInterval(function(){ var dd = new Date(); var y = dd.getFullYear(); var m = dd.getMonth() + 1; var d = dd.getDate(); var h = dd.getHours(); var mi = dd.getMinutes(); var s = dd.getSeconds(); var str = y + "年" + m + "月" + d + "日&nbsp;&nbsp;" + h + ":" + mi + ":" + s + "&nbsp;&nbsp;星期" + "日一二三四五六".charAt(dd.getDay()); document.getElementById("sp_time").innerHTML = str; },1000);]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>ip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解除astats-nl的封禁]]></title>
    <url>%2F2018%2F0801%2F%E8%A7%A3%E9%99%A4astats-nl%E7%9A%84%E5%B0%81%E7%A6%81.html</url>
    <content type="text"><![CDATA[前言：astats.nl是个关于steam成就的第三方网址，被ban与否都不会影响steam账号，如果被ban可以不用担心，若想要解ban则看以下教程。 此文首发于steamcn——蒸汽动力 方法 1：直接删除在这个第三方成就网站上的个人数据这个第三方成就网站是可以直接删除自己的个人资料的，如果想启用的话也能申请重新启用。删除效果如下图： 删除步骤想要解ban或者删除个人资料都要先注册这个论坛的账号，这里是注册网址。登陆之后，进入申请删除或重新启用的页面。进去拉到最下面直接回复I don’t want my profile anymore in this website; please, remove it.然后再贴个自己的astats profile地址就行了,见下图: 接着就是耐心的等待，如果管理员删除了的话会在你的回复下面显示done,见下图： 恢复数据同理。 方法 2：对于第一次被ban或者误ban的解ban若是想继续使用此网站并解ban的话，那就请看下面的方法。 关于申诉的说明AStats Bans and Appeals FAQ Instructions这里是astats的申诉要求和说明，我节选了重要的内容并稍微翻译了一下。 You can make appeal here if: You believe you’ve been wrongly blocked on suspicion of cheating. You’ve cheated in the past and want to come clean and get a second chance to use the site’s leaderboards features. 你可以申述解除ban，如果你觉得： 自己是被误ban的，请说明原因 或者以前做过弊，但是想获得第二次使用本网站成就功能的机会。 You can make appeal here if: Include a link to your AStats profile. If you have not cheated, please try to include as much information as possible that you think could be relevant to the situation. If you’ve used achievement unlocking software in the past, please relock all achievements you cheated before making your thread. You can use the same software you used to cheat to do this, or if you’re not comfortable with that, then SteamSupport is known to have assisted in relocking achievements. Press the update button on each game’s page that you’ve relocked something on. Be thorough and note every game you cheated in your post, if old irregularities come up in the future after you’ve been unmarked, you can’t be guaranteed a second appeal. If you can’t remember all the games you cheated, do not bother asking us what games need to be relocked. You will typically not get an answer. Your profile will be unmarked once the moderator dealing with your thread is confident in that your profile is clean. All games that have been relocked need to be launched to see whether any of the old achievements unlock again, in which case savefiles and/or stats must be purged to prevent that. You will not not be able to get assistance with that if you’re not sure how to do it yourself. Dishonesty will not be taken lightly. If you cheated and don’t wish to relock your cheated achievements, your profile or the portion of your profile in question cannot be unmarked. If you no longer wish to use the site, you can request your profile to be disabled. It can always be re-enabled if you change your mind. 在你准备申述时请彻底阅读以下条例： 申述内容要包括你的astats profiles。 如果你没有作弊,请尝试提供尽可能多的你觉得有用的信息来证明。 如果以前使用过解锁工具，那么请重新锁上你作弊过的成就，你可以使用解锁工具来重新锁上作弊的成就,如果你不能接受再使用解锁工具，那么你可以找steam客服来帮忙重新锁上你的游戏成就。（ps:意思就是你必须要重新锁上你作弊过的成就，可以使用sam，如果你觉得无法忍受再使用此类软件，可以找steam客服帮忙锁上成就） 当你重新锁上某个游戏的成就时，一定要去那个游戏的成就页面更新状态。（ps:这点很重要，锁上之后一定要去astats上的游戏页面更新，如何更新我下面会说） 请彻底检查每一个你作弊的游戏，如果以后有你没有标注的游戏产生了旧的违规，那么将失去第二次申述的机会。 如果你不能记住所有的你做过弊的游戏,请不要问我们有什么游戏需要锁定，你通常不会得到回复。当管理员觉得你的资料已经干净那么将解除你的ban。（ps:不要问管理员你有什么游戏做过弊，要自己去找，你可以检查那些全成就的游戏，或者某个成就价值最高，或者同一时间解锁了大量的成就的游戏，这些游戏你最好都好好检查一下，可以以防万一把自己不确定有没有解锁成就的游戏都给锁上） 所有游戏都需要重新启动一下来检查是否有任何旧的成就会再次开启,如果遇到这种情况,你必须清除存档或数据来防止。如果你不确定怎么做将不会得到帮助。（ps:如果游戏里还存在作弊的存档或者网络数据，虽然你锁上成就，但是一打开游戏就会自动又解开成就，所以如果以前用过作弊的存档来解锁成就的，直接把存档给删了就行，sam也可以清理数据） 不轻易失信。 如果你作弊了，还不想重新锁上你作弊的成就，那么你的资料页面是一定会被标注作弊嫌疑。 如果你不想使用该网址，那么你可以申请禁用你的配置文件，不过以后你改变主意的话可以随时启用。（ps:如果你不想在用这个第三方网站或懒得去解ban了，那么你可以申请让管理员删除你的个人配置文件，想用了也能申请重新启用，方法已经写在了开头） 正式教程首先要做的就是把以前解锁的成就全部再锁定回去。这是至关重要的，宁可把没有作弊过的游戏锁上，也最好别漏掉一个。你若忘记了哪些游戏你解过成就，我教你一个方法。先进入自己的astats的个人资料页面，然后找到自己全成就或者成就得分最高的游戏，点进去看看这些游戏里的成就有没有许多成就是同一时间解锁的。sam使用方法 见下图这样，成就都是同一时间解锁的（图片ps过，看的更直观一点） 请注意图中的update，很重要，当你用sam把成就重新锁定上后，要回到这个游戏的成就界面，点update更新一下状态。另外一定要把你作弊的游戏和重新锁上的游戏记下来，因为等下写申诉时会要用到。（ps:见上面的说明第4条） 当把所有作弊的成就全部锁上且更新状态之后，就可以正式跟管理员申诉了。 进入申诉页面：http://astats.astats.nl/astats/aforum/forumdisplay.php?fid=4 进去之后可以看到里面有许多人的申诉，可以看着参考一下。 接着直接拉到最下面，在网址的右下角有一个 NEW TOPIC，点进去即可发帖。 以下为我写的一份模板: Hi，when I came into contact with the steam a few years ago,I discovered the SAM through a steam organization and used it to unlock the achievements with my curiosity.And now I really regret it,so I relock the achievements and clean it properly.I want to come clean and get a second chance to use the site’s leaderboards features. Unlocked Achivements in the following games: limbo left 4 dead 2 saints row Relock game : limbo left 4 dead 2 saints row My profile:http://astats.astats.nl/astats/User_Info.php?SteamID64=xxxxxxxxxxxxxx 意思是几年前刚接触steam时,我通过论坛了解到了sam，并在好奇心下使用了它。现在我重新锁定了我以前解锁过的成就。我想能够再次使用网站的排行榜功能。然后贴上当时解锁成就的游戏列表，再贴上现在已经重新锁上成就的游戏列表。最后再要贴上自己的astats profile。 按以上格式发完之后就是耐心的等待，基本上第二天就会回复，如果管理员还有什么要求要记得及时处理，解ban的概率还是很大的。]]></content>
      <categories>
        <category>Experience</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>steam</tag>
        <tag>astats-nl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML元素测试]]></title>
    <url>%2F2018%2F0731%2FHTML%E5%85%83%E7%B4%A0%E6%B5%8B%E8%AF%95.html</url>
    <content type="text"><![CDATA[测试HTML元素是否都能正确显示。 标题测试 在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。 你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线： * * * *** ***** - - - --------------------------------------- h1h2h3h4h5h6 行首插入1到6个 # ，对应到标题1到6阶，例如： # 这是 H1 ## 这是 H2 ###### 这是 H6 h1h2 底线形式，利用 =（最高阶标题)和 - （第二阶标题）,例如： This is an h1 ============= This is an h2 ------------- 段落测试1&lt;h1&gt;标题文字&lt;/h1&gt; Lorem ipsum dolor sit amet, test link consectetur adipiscing elit. Strong text pellentesque ligula commodo viverra vehicula. Italic text at ullamcorper enim. Morbi a euismod nibh. underline text non elit nisl. Deleted text tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. This is the first level of quoting. This is nested blockquote. Back to the first level. Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. 12345678910111213[text](url)&lt;a href="url"&gt;text&lt;/a&gt;*斜体文本*_斜体文本_&lt;i&gt; 斜体文本&lt;/i&gt;**加粗文本**__加粗文本__&lt;b&gt;加粗文本&lt;/b&gt;***粗斜体文本***___粗斜体文本___&lt;u&gt; 下划线文本&lt;/u&gt;&lt;strike&gt; 删除文本&lt;/strike&gt;&lt;br&gt;换行&lt;/br&gt; 1234567嵌套引用&gt; 最外层引用&gt; &gt; 多一个&gt; 嵌套一层引用&gt; &gt; &gt; 多层嵌套html 5&lt;blockquote&gt; 标签&lt;blockquote&gt;引用区块&lt;/blockquote&gt; 列表测试 Markdown 支持有序列表和无序列表。无序列表使用星号、加号或是减号作为列表标记,有序列表则使用数字接着一个英文句点。 Unordered List (ul) Red Green Blue 123* Red* Green* Blue 等同于： 123+ Red+ Green+ Blue 等同于： 123- Red- Green- Blue Ordered List (ol) Bird McHale Parish 1. Red 2. Green 3. Blue 非常重要的一点是，在列表标记上使用的数字并不会影响输出的 HTML 结果，上面等同于： 1. Red 1. Green 1. Blue 等同于： 2. Red 6. Green 3. Blue 以上ol列表所产生的 HTML 标记都为： 12345&lt;ol&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;McHale&lt;/li&gt;&lt;li&gt;Parish&lt;/li&gt;&lt;/ol&gt; 表格测试 Name Academy score Harry Potter Gryffindor 90 Hermione Gryffindor 100 Draco Malfoy Slytherin 90 12345Name | Academy | score - | :-: | -: Harry Potter | Gryffindor| 90 Hermione | Gryffindor | 100 Draco Malfoy | Slytherin | 90 Name Academy score Harry Potter Gryffindor 90 Hermione Gryffindor 100 Draco Malfoy Slytherin 90 12345| Name | Academy | score | | - | :-: | -: | | Harry Potter | Gryffindor| 90 | | Hermione | Gryffindor | 100 | | Draco Malfoy | Slytherin | 90 | 表头 表头 表头 111 22222 333333333333 33333333333333 111 22222 1234| 表头 | 表头 | 表头 || ------ | ------ | ------ || 111 | 22222 | 33333333333 || 3333333333333 | 111 | 222222 | 左对齐 右对齐 居中 111 22222 3333333333 333333333333 111 22222 1234| 左对齐 | 右对齐 | 居中 || :------| ------: | :------: || 111 | 22222 | 3333333333 || 33333333333 | 111 | 22222 | 语法说明： 第一行为表头，第二行分隔表头和主体部分，第三行开始每一行代表一个表格行。 列与列之间用管道符号 “|” 隔开。 -:表示内容和标题栏居右对齐，:-表示内容和标题栏居左对齐，:-:表示内容和标题栏居中对齐。 内容和|之间的多余空格会被忽略，每行第一个|和最后一个|可以省略，-的数量至少有一个。 表格的语句上一行必须为空行，不然表格不生效。]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[字体、字号与颜色测试]]></title>
    <url>%2F2018%2F0731%2F%E5%AD%97%E4%BD%93%E3%80%81%E5%AD%97%E5%8F%B7%E4%B8%8E%E9%A2%9C%E8%89%B2%E6%B5%8B%E8%AF%95.html</url>
    <content type="text"><![CDATA[字体测试代码123456&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt;&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt;&lt;font color=#0099ff size=7 face="黑体"&gt;size=7 face="黑体"&lt;/font&gt;&lt;font color=#00ffff size=7&gt;color=#00ffff&lt;/font&gt;&lt;font color=gray size=7&gt;color=gray&lt;/font&gt; Size:规定文本的尺寸大小。可能的值：从1到7的数字。浏览器默认值是3。 效果我是黑体字我是微软雅黑我是华文彩云size=7 face=”黑体”color=#00ffff 可以用十六位颜色值color=gray 也可以用已知颜色名 表格颜色代码1&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#7FFFD4&gt;表格背景颜色名：Aquamarine，十六进制颜色值：#7FFFD4，颜色：rgb(127，255，212)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 效果 表格背景颜色名：Aquamarine，十六进制颜色值：#7FFFD4，颜色：rgb(127, 255, 212) 颜色列表颜色名 十六进制颜色值 颜色 AliceBlue#F0F8FFrgb(240, 248, 255)AntiqueWhite#FAEBD7rgb(250, 235, 215)Aqua#00FFFFrgb(0, 255, 255)Aquamarine#7FFFD4rgb(127, 255, 212)Azure#F0FFFFrgb(240, 255, 255)Beige#F5F5DCrgb(245, 245, 220)Bisque#FFE4C4rgb(255, 228, 196)Black#000000rgb(0, 0, 0)BlanchedAlmond#FFEBCDrgb(255, 235, 205)Blue#0000FFrgb(0, 0, 255)BlueViolet#8A2BE2rgb(138, 43, 226)Brown#A52A2Argb(165, 42, 42)BurlyWood#DEB887rgb(222, 184, 135)CadetBlue#5F9EA0rgb(95, 158, 160)Chartreuse#7FFF00rgb(127, 255, 0)Chocolate#D2691Ergb(210, 105, 30)Coral#FF7F50rgb(255, 127, 80)CornflowerBlue#6495EDrgb(100, 149, 237)Cornsilk#FFF8DCrgb(255, 248, 220)Crimson#DC143Crgb(220, 20, 60)Cyan#00FFFFrgb(0, 255, 255)DarkBlue#00008Brgb(0, 0, 139)DarkCyan#008B8Brgb(0, 139, 139)DarkGoldenRod#B8860Brgb(184, 134, 11)DarkGray#A9A9A9rgb(169, 169, 169)DarkGreen#006400rgb(0, 100, 0)DarkKhaki#BDB76Brgb(189, 183, 107)DarkMagenta#8B008Brgb(139, 0, 139)DarkOliveGreen#556B2Frgb(85, 107, 47)Darkorange#FF8C00rgb(255, 140, 0)DarkOrchid#9932CCrgb(153, 50, 204)DarkRed#8B0000rgb(139, 0, 0)DarkSalmon#E9967Argb(233, 150, 122)DarkSeaGreen#8FBC8Frgb(143, 188, 143)DarkSlateBlue#483D8Brgb(72, 61, 139)DarkSlateGray#2F4F4Frgb(47, 79, 79)DarkTurquoise#00CED1rgb(0, 206, 209)DarkViolet#9400D3rgb(148, 0, 211)DeepPink#FF1493rgb(255, 20, 147)DeepSkyBlue#00BFFFrgb(0, 191, 255)DimGray#696969rgb(105, 105, 105)DodgerBlue#1E90FFrgb(30, 144, 255)Feldspar#D19275rgb(209, 146, 117)FireBrick#B22222rgb(178, 34, 34)FloralWhite#FFFAF0rgb(255, 250, 240)ForestGreen#228B22rgb(34, 139, 34)Fuchsia#FF00FFrgb(255, 0, 255)Gainsboro#DCDCDCrgb(220, 220, 220)GhostWhite#F8F8FFrgb(248, 248, 255)Gold#FFD700rgb(255, 215, 0)GoldenRod#DAA520rgb(218, 165, 32)Gray#808080rgb(128, 128, 128)Green#008000rgb(0, 128, 0)GreenYellow#ADFF2Frgb(173, 255, 47)HoneyDew#F0FFF0rgb(240, 255, 240)HotPink#FF69B4rgb(255, 105, 180)IndianRed#CD5C5Crgb(205, 92, 92)Indigo#4B0082rgb(75, 0, 130)Ivory#FFFFF0rgb(255, 255, 240)Khaki#F0E68Crgb(240, 230, 140)Lavender#E6E6FArgb(230, 230, 250)LavenderBlush#FFF0F5rgb(255, 240, 245)LawnGreen#7CFC00rgb(124, 252, 0)LemonChiffon#FFFACDrgb(255, 250, 205)LightBlue#ADD8E6rgb(173, 216, 230)LightCoral#F08080rgb(240, 128, 128)LightCyan#E0FFFFrgb(224, 255, 255)LightGoldenRodYellow#FAFAD2rgb(250, 250, 210)LightGrey#D3D3D3rgb(211, 211, 211)LightGreen#90EE90rgb(144, 238, 144)LightPink#FFB6C1rgb(255, 182, 193)LightSalmon#FFA07Argb(255, 160, 122)LightSeaGreen#20B2AArgb(32, 178, 170)LightSkyBlue#87CEFArgb(135, 206, 250)LightSlateBlue#8470FFrgb(132, 112, 255)LightSlateGray#778899rgb(119, 136, 153)LightSteelBlue#B0C4DErgb(176, 196, 222)LightYellow#FFFFE0rgb(255, 255, 224)Lime#00FF00rgb(0, 255, 0)LimeGreen#32CD32rgb(50, 205, 50)Linen#FAF0E6rgb(250, 240, 230)Magenta#FF00FFrgb(255, 0, 255)Maroon#800000rgb(128, 0, 0)MediumAquaMarine#66CDAArgb(102, 205, 170)MediumBlue#0000CDrgb(0, 0, 205)MediumOrchid#BA55D3rgb(186, 85, 211)MediumPurple#9370D8rgb(147, 112, 216)MediumSeaGreen#3CB371rgb(60, 179, 113)MediumSlateBlue#7B68EErgb(123, 104, 238)MediumSpringGreen#00FA9Argb(0, 250, 154)MediumTurquoise#48D1CCrgb(72, 209, 204)MediumVioletRed#C71585rgb(199, 21, 133)MidnightBlue#191970rgb(25, 25, 112)MintCream#F5FFFArgb(245, 255, 250)MistyRose#FFE4E1rgb(255, 228, 225)Moccasin#FFE4B5rgb(255, 228, 181)NavajoWhite#FFDEADrgb(255, 222, 173)Navy#000080rgb(0, 0, 128)OldLace#FDF5E6rgb(253, 245, 230)Olive#808000rgb(128, 128, 0)OliveDrab#6B8E23rgb(107, 142, 35)Orange#FFA500rgb(255, 165, 0)OrangeRed#FF4500rgb(255, 69, 0)Orchid#DA70D6rgb(218, 112, 214)PaleGoldenRod#EEE8AArgb(238, 232, 170)PaleGreen#98FB98rgb(152, 251, 152)PaleTurquoise#AFEEEErgb(175, 238, 238)PaleVioletRed#D87093rgb(216, 112, 147)PapayaWhip#FFEFD5rgb(255, 239, 213)PeachPuff#FFDAB9rgb(255, 218, 185)Peru#CD853Frgb(205, 133, 63)Pink#FFC0CBrgb(255, 192, 203)Plum#DDA0DDrgb(221, 160, 221)PowderBlue#B0E0E6rgb(176, 224, 230)Purple#800080rgb(128, 0, 128)Red#FF0000rgb(255, 0, 0)RosyBrown#BC8F8Frgb(188, 143, 143)RoyalBlue#4169E1rgb(65, 105, 225)SaddleBrown#8B4513rgb(139, 69, 19)Salmon#FA8072rgb(250, 128, 114)SandyBrown#F4A460rgb(244, 164, 96)SeaGreen#2E8B57rgb(46, 139, 87)SeaShell#FFF5EErgb(255, 245, 238)Sienna#A0522Drgb(160, 82, 45)Silver#C0C0C0rgb(192, 192, 192)SkyBlue#87CEEBrgb(135, 206, 235)SlateBlue#6A5ACDrgb(106, 90, 205)SlateGray#708090rgb(112, 128, 144)Snow#FFFAFArgb(255, 250, 250)SpringGreen#00FF7Frgb(0, 255, 127)SteelBlue#4682B4rgb(70, 130, 180)Tan#D2B48Crgb(210, 180, 140)Teal#008080rgb(0, 128, 128)Thistle#D8BFD8rgb(216, 191, 216)Tomato#FF6347rgb(255, 99, 71)Turquoise#40E0D0rgb(64, 224, 208)Violet#EE82EErgb(238, 130, 238)VioletRed#D02090rgb(208, 32, 144)Wheat#F5DEB3rgb(245, 222, 179)White#FFFFFFrgb(255, 255, 255)WhiteSmoke#F5F5F5rgb(245, 245, 245)Yellow#FFFF00rgb(255, 255, 0)YellowGreen#9ACD32rgb(154, 205, 50)]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日本語テスト]]></title>
    <url>%2F2018%2F0731%2F%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%83%86%E3%82%B9%E3%83%88.html</url>
    <content type="text"><![CDATA[This is a Japanese test post. 間使図お与情タルテ暮対ワトメ務器女ク託性ぶおみー広転うざ断突ク投9石めつ記流ノウ日用包ょ技記チネフ付景はうるで陸害阪スむょ。振開か東退ロフナ民楽クヒ輸運日フイノ寝92壌粉脅軸3知リゆ条短メレ欺聖ハ必辺ゃわ若片透真経ぶぎえ。 加食簡ス議8康ゆら索渉みなじ市済くそ雪姿込む津選ヒ展野のまぱは易台たぴゃ午場帳懸スが。期ナ聞仕書ぞに郎接らちみ優毎さクし郎売ゆ自昨サヲハヌ社月イキラヱ校数づな野見ツ労出なイよお門清ユフ上意世サエハタ転&gt; 6権めるは笑爆利は意務チコ身潤視奥唆どフば。 実フょめ初97玲政41悪ほスめれ憲給掲任キヘ昇賀細ぞちい変役ぽたー芸教レ被原ヌム隠記ヌ皇叙孟悠慌めけ。71治べみど属岸べて印掲う所朝にイ算津かーぽぱ趣12需見ルラネ含3基ぼッしイ舟万タテヱト出徴国地懲双さばっ。南ぶあ昨記イ者定烈43新ヤラ始聴ソミハラ社情へき界1変掛変の高恐超ト皇済ツホ任無部ケルヒワ換交ーご通写も開悪詳お。歩クロ碁論ヨ駆年や叫力イごぞぶ善経モムノハ先中カリエホ票覧るトい力刻セミ用超づ自千コル育事ラし面基じ補練トーむげ写大アツヲリ元追ひふげ。局ノタフ囲立なイへ更護トスムタ歌士そ事除ノレ当童ッみさ稿本伊タレ点一とンもぱ使窓べ関知商イネハモ良差わゅかみ豆勢筆づルょ観力ぜ改悩ク。 From generator.lorem-ipsum]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中文测试]]></title>
    <url>%2F2018%2F0731%2F%E4%B8%AD%E6%96%87%E6%B5%8B%E8%AF%95.html</url>
    <content type="text"><![CDATA[This is a Chinese test post. 象一平……像直什……家去性口題。時電市國為；包省我，發爸主用通商議黑，民看會一、省林見升制甚……減我事，認西我，笑是圖只化下名有車，能業我個下進劇人真作南家以人不，目加管以民是能識在，助又部時們是：年幾是了學多票人金去是，年成成代些了權去人。實應子者外慢，係國全起斷們速節自，使認基與我朋們的天又變友衣言，顯開看現時那的精綠見到真輕表園史得我、團山次反有熱經是朋十親路來，人聞響有其比精河用們的音題話冷，他自創大那再參風數科的子級濟果英手笑大他特母消；間頭意善結！了起功相它算個發走美位內需技教取事是國別係臺麼受大日過般期整認國一資比和相作問為！度海！中春急思能裡。 國命都樂此醫那業面語不命發市，到間境走常手員的里其個，同黨子、散形子！沒術創體。問修量友管全件為分意要具運來政！外總樣作白代？安不如草特理麼常！市的通草好育還地眾話。兒流加似準吸家現國支小去利座，算事同真平好新父書的舉？ 個口家，同做點親於變度到紙生心為員；還內子建布，大們養知寫型體經，今民慢著我活升。 From 亂數假文產生器 - Chinese Lorem Ipsum]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F0730%2Fhello-world.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
